### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.VoiceLibrary.Repo
  commentId: T:Glitch9.AIDevKit.VoiceLibrary.Repo
  id: VoiceLibrary.Repo
  parent: Glitch9.AIDevKit
  children: []
  langs:
  - csharp
  - vb
  name: VoiceLibrary.Repo
  nameWithType: VoiceLibrary.Repo
  fullName: Glitch9.AIDevKit.VoiceLibrary.Repo
  type: Class
  source:
    id: Repo
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Common/DataAssets/Databases/VoiceLibrary.cs
    startLine: 14
  namespace: Glitch9.AIDevKit
  summary: Database for storing voice data.
  example: []
  syntax:
    content: 'public class VoiceLibrary.Repo : Database<Voice>, IDictionary<string, Voice>, ICollection<KeyValuePair<string, Voice>>, IEnumerable<KeyValuePair<string, Voice>>'
    content.vb: Public Class VoiceLibrary.Repo Inherits Database(Of Voice) Implements IDictionary(Of String, Voice), ICollection(Of KeyValuePair(Of String, Voice)), IEnumerable(Of KeyValuePair(Of String, Voice))
  inheritance:
  - System.Object
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  - Glitch9.Collections.Database{Glitch9.AIDevKit.Voice}
  implements:
  - System.Collections.Generic.IDictionary{System.String,Glitch9.AIDevKit.Voice}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}}
  inheritedMembers:
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.serializedList
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Count
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.IsReadOnly
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.GetEnumerator
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Clear
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Contains(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}[],System.Int32)
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.FindAll(System.Predicate{Glitch9.AIDevKit.Voice})
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.String,Glitch9.AIDevKit.Voice)
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.ContainsKey(System.String)
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.String)
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.TryGetValue(System.String,Glitch9.AIDevKit.Voice@)
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Item(System.String)
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Keys
  - Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Values
references:
- uid: Glitch9.AIDevKit
  commentId: N:Glitch9.AIDevKit
  href: Glitch9.html
  name: Glitch9.AIDevKit
  nameWithType: Glitch9.AIDevKit
  fullName: Glitch9.AIDevKit
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  commentId: T:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  parent: Glitch9.Collections
  definition: Glitch9.Collections.ReferencedDictionary`2
  href: Glitch9.AIDevKit.Voice.html
  name: ReferencedDictionary<string, Voice>
  nameWithType: ReferencedDictionary<string, Voice>
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>
  nameWithType.vb: ReferencedDictionary(Of String, Voice)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice)
  name.vb: ReferencedDictionary(Of String, Voice)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2
    name: ReferencedDictionary
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2
    name: ReferencedDictionary
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
- uid: Glitch9.Collections.Database{Glitch9.AIDevKit.Voice}
  commentId: T:Glitch9.Collections.Database{Glitch9.AIDevKit.Voice}
  parent: Glitch9.Collections
  definition: Glitch9.Collections.Database`1
  href: Glitch9.AIDevKit.Voice.html
  name: Database<Voice>
  nameWithType: Database<Voice>
  fullName: Glitch9.Collections.Database<Glitch9.AIDevKit.Voice>
  nameWithType.vb: Database(Of Voice)
  fullName.vb: Glitch9.Collections.Database(Of Glitch9.AIDevKit.Voice)
  name.vb: Database(Of Voice)
  spec.csharp:
  - uid: Glitch9.Collections.Database`1
    name: Database
  - name: <
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  spec.vb:
  - uid: Glitch9.Collections.Database`1
    name: Database
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
- uid: System.Collections.Generic.IDictionary{System.String,Glitch9.AIDevKit.Voice}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Glitch9.AIDevKit.Voice}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: Glitch9.AIDevKit.Voice.html
  name: IDictionary<string, Voice>
  nameWithType: IDictionary<string, Voice>
  fullName: System.Collections.Generic.IDictionary<string, Glitch9.AIDevKit.Voice>
  nameWithType.vb: IDictionary(Of String, Voice)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Glitch9.AIDevKit.Voice)
  name.vb: IDictionary(Of String, Voice)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: Glitch9.AIDevKit.Voice.html
  name: ICollection<KeyValuePair<string, Voice>>
  nameWithType: ICollection<KeyValuePair<string, Voice>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Glitch9.AIDevKit.Voice>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Voice))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of String, Glitch9.AIDevKit.Voice))
  name.vb: ICollection(Of KeyValuePair(Of String, Voice))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: Glitch9.AIDevKit.Voice.html
  name: IEnumerable<KeyValuePair<string, Voice>>
  nameWithType: IEnumerable<KeyValuePair<string, Voice>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Glitch9.AIDevKit.Voice>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Voice))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Glitch9.AIDevKit.Voice))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Voice))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.serializedList
  commentId: F:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.serializedList
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.serializedList
  name: serializedList
  nameWithType: ReferencedDictionary<string, Voice>.serializedList
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.serializedList
  nameWithType.vb: ReferencedDictionary(Of String, Voice).serializedList
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).serializedList
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Count
  commentId: P:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Count
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Count
  name: Count
  nameWithType: ReferencedDictionary<string, Voice>.Count
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Count
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Count
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Count
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.IsReadOnly
  commentId: P:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.IsReadOnly
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.IsReadOnly
  name: IsReadOnly
  nameWithType: ReferencedDictionary<string, Voice>.IsReadOnly
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.IsReadOnly
  nameWithType.vb: ReferencedDictionary(Of String, Voice).IsReadOnly
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).IsReadOnly
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.GetEnumerator
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.GetEnumerator
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: ReferencedDictionary<string, Voice>.GetEnumerator()
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.GetEnumerator()
  nameWithType.vb: ReferencedDictionary(Of String, Voice).GetEnumerator()
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).GetEnumerator()
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  href: Glitch9.AIDevKit.Voice.html
  name: Add(KeyValuePair<string, Voice>)
  nameWithType: ReferencedDictionary<string, Voice>.Add(KeyValuePair<string, Voice>)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Add(System.Collections.Generic.KeyValuePair<string, Glitch9.AIDevKit.Voice>)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Add(KeyValuePair(Of String, Voice))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Add(System.Collections.Generic.KeyValuePair(Of String, Glitch9.AIDevKit.Voice))
  name.vb: Add(KeyValuePair(Of String, Voice))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
    name: Add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
    name: Add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: Glitch9.AIDevKit.Voice.html
  name: AddRange(IEnumerable<KeyValuePair<string, Voice>>)
  nameWithType: ReferencedDictionary<string, Voice>.AddRange(IEnumerable<KeyValuePair<string, Voice>>)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.AddRange(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Glitch9.AIDevKit.Voice>>)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).AddRange(IEnumerable(Of KeyValuePair(Of String, Voice)))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).AddRange(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Glitch9.AIDevKit.Voice)))
  name.vb: AddRange(IEnumerable(Of KeyValuePair(Of String, Voice)))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
    name: AddRange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
    name: AddRange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Clear
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Clear
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Clear
  name: Clear()
  nameWithType: ReferencedDictionary<string, Voice>.Clear()
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Clear()
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Clear()
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Clear()
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Clear
    name: Clear
  - name: (
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Contains(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Contains(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  href: Glitch9.AIDevKit.Voice.html
  name: Contains(KeyValuePair<string, Voice>)
  nameWithType: ReferencedDictionary<string, Voice>.Contains(KeyValuePair<string, Voice>)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Contains(System.Collections.Generic.KeyValuePair<string, Glitch9.AIDevKit.Voice>)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Contains(KeyValuePair(Of String, Voice))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Contains(System.Collections.Generic.KeyValuePair(Of String, Glitch9.AIDevKit.Voice))
  name.vb: Contains(KeyValuePair(Of String, Voice))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Contains(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
    name: Contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Contains(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
    name: Contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}[],System.Int32)
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}[],System.Int32)
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  href: Glitch9.AIDevKit.Voice.html
  name: CopyTo(KeyValuePair<string, Voice>[], int)
  nameWithType: ReferencedDictionary<string, Voice>.CopyTo(KeyValuePair<string, Voice>[], int)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.CopyTo(System.Collections.Generic.KeyValuePair<string, Glitch9.AIDevKit.Voice>[], int)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).CopyTo(KeyValuePair(Of String, Voice)(), Integer)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).CopyTo(System.Collections.Generic.KeyValuePair(Of String, Glitch9.AIDevKit.Voice)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of String, Voice)(), Integer)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}[],System.Int32)
    name: CopyTo
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}[],System.Int32)
    name: CopyTo
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  href: Glitch9.AIDevKit.Voice.html
  name: Remove(KeyValuePair<string, Voice>)
  nameWithType: ReferencedDictionary<string, Voice>.Remove(KeyValuePair<string, Voice>)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Remove(System.Collections.Generic.KeyValuePair<string, Glitch9.AIDevKit.Voice>)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Remove(KeyValuePair(Of String, Voice))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Remove(System.Collections.Generic.KeyValuePair(Of String, Glitch9.AIDevKit.Voice))
  name.vb: Remove(KeyValuePair(Of String, Voice))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
    name: Remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice})
    name: Remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: Glitch9.AIDevKit.Voice.html
  name: RemoveAll(Predicate<KeyValuePair<string, Voice>>)
  nameWithType: ReferencedDictionary<string, Voice>.RemoveAll(Predicate<KeyValuePair<string, Voice>>)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.RemoveAll(System.Predicate<System.Collections.Generic.KeyValuePair<string, Glitch9.AIDevKit.Voice>>)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).RemoveAll(Predicate(Of KeyValuePair(Of String, Voice)))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).RemoveAll(System.Predicate(Of System.Collections.Generic.KeyValuePair(Of String, Glitch9.AIDevKit.Voice)))
  name.vb: RemoveAll(Predicate(Of KeyValuePair(Of String, Voice)))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
    name: RemoveAll
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{System.String,Glitch9.AIDevKit.Voice}})
    name: RemoveAll
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.FindAll(System.Predicate{Glitch9.AIDevKit.Voice})
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.FindAll(System.Predicate{Glitch9.AIDevKit.Voice})
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.FindAll(System.Predicate{`1})
  href: Glitch9.AIDevKit.Voice.html
  name: FindAll(Predicate<Voice>)
  nameWithType: ReferencedDictionary<string, Voice>.FindAll(Predicate<Voice>)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.FindAll(System.Predicate<Glitch9.AIDevKit.Voice>)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).FindAll(Predicate(Of Voice))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).FindAll(System.Predicate(Of Glitch9.AIDevKit.Voice))
  name.vb: FindAll(Predicate(Of Voice))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.FindAll(System.Predicate{Glitch9.AIDevKit.Voice})
    name: FindAll
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.FindAll(System.Predicate{Glitch9.AIDevKit.Voice})
    name: FindAll
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.String,Glitch9.AIDevKit.Voice)
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.String,Glitch9.AIDevKit.Voice)
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Add(`0,`1)
  href: Glitch9.AIDevKit.Voice.html
  name: Add(string, Voice)
  nameWithType: ReferencedDictionary<string, Voice>.Add(string, Voice)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Add(string, Glitch9.AIDevKit.Voice)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Add(String, Voice)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Add(String, Glitch9.AIDevKit.Voice)
  name.vb: Add(String, Voice)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.String,Glitch9.AIDevKit.Voice)
    name: Add
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Add(System.String,Glitch9.AIDevKit.Voice)
    name: Add
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.ContainsKey(System.String)
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.ContainsKey(System.String)
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.ContainsKey(`0)
  name: ContainsKey(string)
  nameWithType: ReferencedDictionary<string, Voice>.ContainsKey(string)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.ContainsKey(string)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).ContainsKey(String)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).ContainsKey(String)
  name.vb: ContainsKey(String)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.ContainsKey(System.String)
    name: ContainsKey
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.ContainsKey(System.String)
    name: ContainsKey
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.String)
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.String)
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Remove(`0)
  name: Remove(string)
  nameWithType: ReferencedDictionary<string, Voice>.Remove(string)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Remove(string)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Remove(String)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Remove(String)
  name.vb: Remove(String)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.String)
    name: Remove
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Remove(System.String)
    name: Remove
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.TryGetValue(System.String,Glitch9.AIDevKit.Voice@)
  commentId: M:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.TryGetValue(System.String,Glitch9.AIDevKit.Voice@)
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.TryGetValue(`0,`1@)
  href: Glitch9.AIDevKit.Voice.html
  name: TryGetValue(string, out Voice)
  nameWithType: ReferencedDictionary<string, Voice>.TryGetValue(string, out Voice)
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.TryGetValue(string, out Glitch9.AIDevKit.Voice)
  nameWithType.vb: ReferencedDictionary(Of String, Voice).TryGetValue(String, Voice)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).TryGetValue(String, Glitch9.AIDevKit.Voice)
  name.vb: TryGetValue(String, Voice)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.TryGetValue(System.String,Glitch9.AIDevKit.Voice@)
    name: TryGetValue
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.TryGetValue(System.String,Glitch9.AIDevKit.Voice@)
    name: TryGetValue
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.Voice
    name: Voice
    href: Glitch9.AIDevKit.Voice.html
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Item(System.String)
  commentId: P:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Item(System.String)
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Item(`0)
  name: this[string]
  nameWithType: ReferencedDictionary<string, Voice>.this[string]
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.this[string]
  nameWithType.vb: ReferencedDictionary(Of String, Voice).this[](String)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).this[](String)
  name.vb: this[](String)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.String
    name: string
    isExternal: true
  - name: ']'
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Item(System.String)
    name: this[]
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Keys
  commentId: P:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Keys
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Keys
  name: Keys
  nameWithType: ReferencedDictionary<string, Voice>.Keys
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Keys
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Keys
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Keys
- uid: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Values
  commentId: P:Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}.Values
  parent: Glitch9.Collections.ReferencedDictionary{System.String,Glitch9.AIDevKit.Voice}
  definition: Glitch9.Collections.ReferencedDictionary`2.Values
  name: Values
  nameWithType: ReferencedDictionary<string, Voice>.Values
  fullName: Glitch9.Collections.ReferencedDictionary<string, Glitch9.AIDevKit.Voice>.Values
  nameWithType.vb: ReferencedDictionary(Of String, Voice).Values
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of String, Glitch9.AIDevKit.Voice).Values
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.Collections.ReferencedDictionary`2
  commentId: T:Glitch9.Collections.ReferencedDictionary`2
  name: ReferencedDictionary<TKey, TValue>
  nameWithType: ReferencedDictionary<TKey, TValue>
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue)
  name.vb: ReferencedDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2
    name: ReferencedDictionary
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2
    name: ReferencedDictionary
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Glitch9.Collections
  commentId: N:Glitch9.Collections
  href: Glitch9.html
  name: Glitch9.Collections
  nameWithType: Glitch9.Collections
  fullName: Glitch9.Collections
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.Collections
    name: Collections
    href: Glitch9.Collections.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.Collections
    name: Collections
    href: Glitch9.Collections.html
- uid: Glitch9.Collections.Database`1
  commentId: T:Glitch9.Collections.Database`1
  name: Database<TData>
  nameWithType: Database<TData>
  fullName: Glitch9.Collections.Database<TData>
  nameWithType.vb: Database(Of TData)
  fullName.vb: Glitch9.Collections.Database(Of TData)
  name.vb: Database(Of TData)
  spec.csharp:
  - uid: Glitch9.Collections.Database`1
    name: Database
  - name: <
  - name: TData
  - name: '>'
  spec.vb:
  - uid: Glitch9.Collections.Database`1
    name: Database
  - name: (
  - name: Of
  - name: " "
  - name: TData
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.serializedList
  commentId: F:Glitch9.Collections.ReferencedDictionary`2.serializedList
  name: serializedList
  nameWithType: ReferencedDictionary<TKey, TValue>.serializedList
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.serializedList
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).serializedList
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).serializedList
- uid: Glitch9.Collections.ReferencedDictionary`2.Count
  commentId: P:Glitch9.Collections.ReferencedDictionary`2.Count
  name: Count
  nameWithType: ReferencedDictionary<TKey, TValue>.Count
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Count
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Count
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Count
- uid: Glitch9.Collections.ReferencedDictionary`2.IsReadOnly
  commentId: P:Glitch9.Collections.ReferencedDictionary`2.IsReadOnly
  name: IsReadOnly
  nameWithType: ReferencedDictionary<TKey, TValue>.IsReadOnly
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.IsReadOnly
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).IsReadOnly
- uid: Glitch9.Collections.ReferencedDictionary`2.GetEnumerator
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: ReferencedDictionary<TKey, TValue>.GetEnumerator()
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: Add(KeyValuePair<TKey, TValue>)
  nameWithType: ReferencedDictionary<TKey, TValue>.Add(KeyValuePair<TKey, TValue>)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  isExternal: true
  name: AddRange(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType: ReferencedDictionary<TKey, TValue>.AddRange(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.AddRange(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).AddRange(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).AddRange(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: AddRange(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: AddRange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: AddRange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.Clear
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.Clear
  name: Clear()
  nameWithType: ReferencedDictionary<TKey, TValue>.Clear()
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Clear()
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Clear()
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Clear
    name: Clear
  - name: (
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: Contains(KeyValuePair<TKey, TValue>)
  nameWithType: ReferencedDictionary<TKey, TValue>.Contains(KeyValuePair<TKey, TValue>)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isExternal: true
  name: CopyTo(KeyValuePair<TKey, TValue>[], int)
  nameWithType: ReferencedDictionary<TKey, TValue>.CopyTo(KeyValuePair<TKey, TValue>[], int)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], int)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: CopyTo
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: CopyTo
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: Remove(KeyValuePair<TKey, TValue>)
  nameWithType: ReferencedDictionary<TKey, TValue>.Remove(KeyValuePair<TKey, TValue>)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: Remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}})
  isExternal: true
  name: RemoveAll(Predicate<KeyValuePair<TKey, TValue>>)
  nameWithType: ReferencedDictionary<TKey, TValue>.RemoveAll(Predicate<KeyValuePair<TKey, TValue>>)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.RemoveAll(System.Predicate<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).RemoveAll(Predicate(Of KeyValuePair(Of TKey, TValue)))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).RemoveAll(System.Predicate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: RemoveAll(Predicate(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: RemoveAll
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.RemoveAll(System.Predicate{System.Collections.Generic.KeyValuePair{`0,`1}})
    name: RemoveAll
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.FindAll(System.Predicate{`1})
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.FindAll(System.Predicate{`1})
  isExternal: true
  name: FindAll(Predicate<TValue>)
  nameWithType: ReferencedDictionary<TKey, TValue>.FindAll(Predicate<TValue>)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.FindAll(System.Predicate<TValue>)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).FindAll(Predicate(Of TValue))
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).FindAll(System.Predicate(Of TValue))
  name.vb: FindAll(Predicate(Of TValue))
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.FindAll(System.Predicate{`1})
    name: FindAll
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.FindAll(System.Predicate{`1})
    name: FindAll
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.Add(`0,`1)
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.Add(`0,`1)
  name: Add(TKey, TValue)
  nameWithType: ReferencedDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Add(`0,`1)
    name: Add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Add(`0,`1)
    name: Add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.ContainsKey(`0)
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  nameWithType: ReferencedDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.ContainsKey(`0)
    name: ContainsKey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.ContainsKey(`0)
    name: ContainsKey
  - name: (
  - name: TKey
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.Remove(`0)
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.Remove(`0)
  name: Remove(TKey)
  nameWithType: ReferencedDictionary<TKey, TValue>.Remove(TKey)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Remove(`0)
    name: Remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Remove(`0)
    name: Remove
  - name: (
  - name: TKey
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.TryGetValue(`0,`1@)
  commentId: M:Glitch9.Collections.ReferencedDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, out TValue)
  nameWithType: ReferencedDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: Glitch9.Collections.ReferencedDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.Item(`0)
  commentId: P:Glitch9.Collections.ReferencedDictionary`2.Item(`0)
  name: this[TKey]
  nameWithType: ReferencedDictionary<TKey, TValue>.this[TKey]
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: Glitch9.Collections.ReferencedDictionary`2.Item(`0)
    name: this[]
  - name: (
  - name: TKey
  - name: )
- uid: Glitch9.Collections.ReferencedDictionary`2.Keys
  commentId: P:Glitch9.Collections.ReferencedDictionary`2.Keys
  name: Keys
  nameWithType: ReferencedDictionary<TKey, TValue>.Keys
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Keys
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Keys
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Keys
- uid: Glitch9.Collections.ReferencedDictionary`2.Values
  commentId: P:Glitch9.Collections.ReferencedDictionary`2.Values
  name: Values
  nameWithType: ReferencedDictionary<TKey, TValue>.Values
  fullName: Glitch9.Collections.ReferencedDictionary<TKey, TValue>.Values
  nameWithType.vb: ReferencedDictionary(Of TKey, TValue).Values
  fullName.vb: Glitch9.Collections.ReferencedDictionary(Of TKey, TValue).Values
