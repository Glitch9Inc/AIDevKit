### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.OpenAI.Services.BatchService
  commentId: T:Glitch9.AIDevKit.OpenAI.Services.BatchService
  id: BatchService
  parent: Glitch9.AIDevKit.OpenAI.Services
  children:
  - Glitch9.AIDevKit.OpenAI.Services.BatchService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI)
  - Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync(System.String,RequestOptions)
  langs:
  - csharp
  - vb
  name: BatchService
  nameWithType: BatchService
  fullName: Glitch9.AIDevKit.OpenAI.Services.BatchService
  type: Class
  source:
    id: BatchService
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Endpoints/BatchService.cs
    startLine: 8
  namespace: Glitch9.AIDevKit.OpenAI.Services
  summary: 'Batch Service: https://platform.openai.com/docs/api-reference/batch'
  example: []
  syntax:
    content: 'public class BatchService : CRUDService<OpenAI, Batch, BatchRequest, CursorQuery>'
    content.vb: Public Class BatchService Inherits CRUDService(Of OpenAI, Batch, BatchRequest, CursorQuery)
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.OpenAI.Services.BatchService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI)
  commentId: M:Glitch9.AIDevKit.OpenAI.Services.BatchService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI)
  id: '#ctor(Glitch9.AIDevKit.OpenAI.OpenAI)'
  parent: Glitch9.AIDevKit.OpenAI.Services.BatchService
  langs:
  - csharp
  - vb
  name: BatchService(OpenAI)
  nameWithType: BatchService.BatchService(OpenAI)
  fullName: Glitch9.AIDevKit.OpenAI.Services.BatchService.BatchService(Glitch9.AIDevKit.OpenAI.OpenAI)
  type: Constructor
  source:
    id: .ctor
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Endpoints/BatchService.cs
    startLine: 13
  namespace: Glitch9.AIDevKit.OpenAI.Services
  syntax:
    content: public BatchService(OpenAI client)
    parameters:
    - id: client
      type: Glitch9.AIDevKit.OpenAI.OpenAI
    content.vb: Public Sub New(client As OpenAI)
  overload: Glitch9.AIDevKit.OpenAI.Services.BatchService.#ctor*
  nameWithType.vb: BatchService.New(OpenAI)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.BatchService.New(Glitch9.AIDevKit.OpenAI.OpenAI)
  name.vb: New(OpenAI)
- uid: Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync(System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync(System.String,RequestOptions)
  id: CancelAsync(System.String,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Services.BatchService
  langs:
  - csharp
  - vb
  name: CancelAsync(string, RequestOptions)
  nameWithType: BatchService.CancelAsync(string, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync(string, RequestOptions)
  type: Method
  source:
    id: CancelAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Endpoints/BatchService.cs
    startLine: 15
  namespace: Glitch9.AIDevKit.OpenAI.Services
  syntax:
    content: public UniTask<Batch> CancelAsync(string objectId, RequestOptions options = null)
    parameters:
    - id: objectId
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.Batch}
    content.vb: Public Function CancelAsync(objectId As String, options As RequestOptions = Nothing) As UniTask(Of Batch)
  overload: Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync*
  nameWithType.vb: BatchService.CancelAsync(String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync(String, RequestOptions)
  name.vb: CancelAsync(String, RequestOptions)
references:
- uid: Glitch9.AIDevKit.OpenAI.Services
  commentId: N:Glitch9.AIDevKit.OpenAI.Services
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI.Services
  nameWithType: Glitch9.AIDevKit.OpenAI.Services
  fullName: Glitch9.AIDevKit.OpenAI.Services
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Services
    name: Services
    href: Glitch9.AIDevKit.OpenAI.Services.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Services
    name: Services
    href: Glitch9.AIDevKit.OpenAI.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.OpenAI.Services.BatchService.#ctor*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Services.BatchService.#ctor
  href: Glitch9.AIDevKit.OpenAI.Services.BatchService.html#Glitch9_AIDevKit_OpenAI_Services_BatchService__ctor_Glitch9_AIDevKit_OpenAI_OpenAI_
  name: BatchService
  nameWithType: BatchService.BatchService
  fullName: Glitch9.AIDevKit.OpenAI.Services.BatchService.BatchService
  nameWithType.vb: BatchService.New
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.BatchService.New
  name.vb: New
- uid: Glitch9.AIDevKit.OpenAI.OpenAI
  commentId: T:Glitch9.AIDevKit.OpenAI.OpenAI
  parent: Glitch9.AIDevKit.OpenAI
  href: Glitch9.AIDevKit.OpenAI.OpenAI.html
  name: OpenAI
  nameWithType: OpenAI
  fullName: Glitch9.AIDevKit.OpenAI.OpenAI
- uid: Glitch9.AIDevKit.OpenAI
  commentId: N:Glitch9.AIDevKit.OpenAI
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI
  nameWithType: Glitch9.AIDevKit.OpenAI
  fullName: Glitch9.AIDevKit.OpenAI
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
- uid: Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync
  href: Glitch9.AIDevKit.OpenAI.Services.BatchService.html#Glitch9_AIDevKit_OpenAI_Services_BatchService_CancelAsync_System_String_RequestOptions_
  name: CancelAsync
  nameWithType: BatchService.CancelAsync
  fullName: Glitch9.AIDevKit.OpenAI.Services.BatchService.CancelAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RequestOptions
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: RequestOptions
- uid: UniTask{Glitch9.AIDevKit.OpenAI.Batch}
  commentId: '!:UniTask{Glitch9.AIDevKit.OpenAI.Batch}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.OpenAI.Batch.html
  name: UniTask<Batch>
  nameWithType: UniTask<Batch>
  fullName: UniTask<Glitch9.AIDevKit.OpenAI.Batch>
  nameWithType.vb: UniTask(Of Batch)
  fullName.vb: UniTask(Of Glitch9.AIDevKit.OpenAI.Batch)
  name.vb: UniTask(Of Batch)
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.OpenAI.Batch
    name: Batch
    href: Glitch9.AIDevKit.OpenAI.Batch.html
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.OpenAI.Batch
    name: Batch
    href: Glitch9.AIDevKit.OpenAI.Batch.html
  - name: )
- uid: UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
