### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.ElevenLabs.Utterances
  commentId: T:Glitch9.AIDevKit.ElevenLabs.Utterances
  id: Utterances
  parent: Glitch9.AIDevKit.ElevenLabs
  children:
  - Glitch9.AIDevKit.ElevenLabs.Utterances.End
  - Glitch9.AIDevKit.ElevenLabs.Utterances.Start
  langs:
  - csharp
  - vb
  name: Utterances
  nameWithType: Utterances
  fullName: Glitch9.AIDevKit.ElevenLabs.Utterances
  type: Class
  source:
    id: Utterances
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 112
  namespace: Glitch9.AIDevKit.ElevenLabs
  syntax:
    content: public class Utterances
    content.vb: Public Class Utterances
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.ElevenLabs.Utterances.Start
  commentId: P:Glitch9.AIDevKit.ElevenLabs.Utterances.Start
  id: Start
  parent: Glitch9.AIDevKit.ElevenLabs.Utterances
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: Utterances.Start
  fullName: Glitch9.AIDevKit.ElevenLabs.Utterances.Start
  type: Property
  source:
    id: Start
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 117
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: The start time of the utterance in seconds.
  example: []
  syntax:
    content: public double? Start { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Start As Double?
  overload: Glitch9.AIDevKit.ElevenLabs.Utterances.Start*
- uid: Glitch9.AIDevKit.ElevenLabs.Utterances.End
  commentId: P:Glitch9.AIDevKit.ElevenLabs.Utterances.End
  id: End
  parent: Glitch9.AIDevKit.ElevenLabs.Utterances
  langs:
  - csharp
  - vb
  name: End
  nameWithType: Utterances.End
  fullName: Glitch9.AIDevKit.ElevenLabs.Utterances.End
  type: Property
  source:
    id: End
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 122
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: The end time of the utterance in seconds.
  example: []
  syntax:
    content: public double? End { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property [End] As Double?
  overload: Glitch9.AIDevKit.ElevenLabs.Utterances.End*
references:
- uid: Glitch9.AIDevKit.ElevenLabs
  commentId: N:Glitch9.AIDevKit.ElevenLabs
  href: Glitch9.html
  name: Glitch9.AIDevKit.ElevenLabs
  nameWithType: Glitch9.AIDevKit.ElevenLabs
  fullName: Glitch9.AIDevKit.ElevenLabs
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.ElevenLabs
    name: ElevenLabs
    href: Glitch9.AIDevKit.ElevenLabs.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.ElevenLabs
    name: ElevenLabs
    href: Glitch9.AIDevKit.ElevenLabs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.ElevenLabs.Utterances.Start*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.Utterances.Start
  href: Glitch9.AIDevKit.ElevenLabs.Utterances.html#Glitch9_AIDevKit_ElevenLabs_Utterances_Start
  name: Start
  nameWithType: Utterances.Start
  fullName: Glitch9.AIDevKit.ElevenLabs.Utterances.Start
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: double?
  nameWithType: double?
  fullName: double?
  nameWithType.vb: Double?
  fullName.vb: Double?
  name.vb: Double?
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Glitch9.AIDevKit.ElevenLabs.Utterances.End*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.Utterances.End
  href: Glitch9.AIDevKit.ElevenLabs.Utterances.html#Glitch9_AIDevKit_ElevenLabs_Utterances_End
  name: End
  nameWithType: Utterances.End
  fullName: Glitch9.AIDevKit.ElevenLabs.Utterances.End
