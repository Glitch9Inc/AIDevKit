### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService
  commentId: T:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService
  id: VectorStoreFilesBatchService
  parent: Glitch9.AIDevKit.OpenAI.Services
  children:
  - Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI,RESTHeader[])
  - Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync(System.String,System.String,RequestOptions)
  - Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync(System.String,Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest)
  - Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync(System.String,CursorQuery,RequestOptions)
  - Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve(System.String,System.String,RequestOptions)
  langs:
  - csharp
  - vb
  name: VectorStoreFilesBatchService
  nameWithType: VectorStoreFilesBatchService
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService
  type: Class
  source:
    id: VectorStoreFilesBatchService
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/VectorStores/VectorStoreFilesBatchService.cs
    startLine: 10
  namespace: Glitch9.AIDevKit.OpenAI.Services
  summary: 'Vector Store Files: https://platform.openai.com/docs/api-reference/vector-stores-files'
  example: []
  syntax:
    content: 'public class VectorStoreFilesBatchService : CRUDServiceBase<OpenAI>'
    content.vb: Public Class VectorStoreFilesBatchService Inherits CRUDServiceBase(Of OpenAI)
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI,RESTHeader[])
  commentId: M:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI,RESTHeader[])
  id: '#ctor(Glitch9.AIDevKit.OpenAI.OpenAI,RESTHeader[])'
  parent: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService
  langs:
  - csharp
  - vb
  name: VectorStoreFilesBatchService(OpenAI, params RESTHeader[])
  nameWithType: VectorStoreFilesBatchService.VectorStoreFilesBatchService(OpenAI, params RESTHeader[])
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.VectorStoreFilesBatchService(Glitch9.AIDevKit.OpenAI.OpenAI, params RESTHeader[])
  type: Constructor
  source:
    id: .ctor
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/VectorStores/VectorStoreFilesBatchService.cs
    startLine: 18
  namespace: Glitch9.AIDevKit.OpenAI.Services
  syntax:
    content: public VectorStoreFilesBatchService(OpenAI client, params RESTHeader[] extraHeaders)
    parameters:
    - id: client
      type: Glitch9.AIDevKit.OpenAI.OpenAI
    - id: extraHeaders
      type: RESTHeader[]
    content.vb: Public Sub New(client As OpenAI, ParamArray extraHeaders As RESTHeader())
  overload: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.#ctor*
  nameWithType.vb: VectorStoreFilesBatchService.New(OpenAI, ParamArray RESTHeader())
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.New(Glitch9.AIDevKit.OpenAI.OpenAI, ParamArray RESTHeader())
  name.vb: New(OpenAI, ParamArray RESTHeader())
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync(System.String,Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest)
  commentId: M:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync(System.String,Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest)
  id: CreateAsync(System.String,Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest)
  parent: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService
  langs:
  - csharp
  - vb
  name: CreateAsync(string, VectorStoreFilesBatchRequest)
  nameWithType: VectorStoreFilesBatchService.CreateAsync(string, VectorStoreFilesBatchRequest)
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync(string, Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest)
  type: Method
  source:
    id: CreateAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/VectorStores/VectorStoreFilesBatchService.cs
    startLine: 22
  namespace: Glitch9.AIDevKit.OpenAI.Services
  syntax:
    content: public UniTask<VectorStoreFilesBatch> CreateAsync(string vectorStoreId, VectorStoreFilesBatchRequest req)
    parameters:
    - id: vectorStoreId
      type: System.String
    - id: req
      type: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch}
    content.vb: Public Function CreateAsync(vectorStoreId As String, req As VectorStoreFilesBatchRequest) As UniTask(Of VectorStoreFilesBatch)
  overload: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync*
  nameWithType.vb: VectorStoreFilesBatchService.CreateAsync(String, VectorStoreFilesBatchRequest)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync(String, Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest)
  name.vb: CreateAsync(String, VectorStoreFilesBatchRequest)
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve(System.String,System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve(System.String,System.String,RequestOptions)
  id: Retrieve(System.String,System.String,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService
  langs:
  - csharp
  - vb
  name: Retrieve(string, string, RequestOptions)
  nameWithType: VectorStoreFilesBatchService.Retrieve(string, string, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve(string, string, RequestOptions)
  type: Method
  source:
    id: Retrieve
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/VectorStores/VectorStoreFilesBatchService.cs
    startLine: 27
  namespace: Glitch9.AIDevKit.OpenAI.Services
  syntax:
    content: public UniTask<VectorStoreFilesBatch> Retrieve(string vectorStoreId, string batchId, RequestOptions options = null)
    parameters:
    - id: vectorStoreId
      type: System.String
    - id: batchId
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch}
    content.vb: Public Function Retrieve(vectorStoreId As String, batchId As String, options As RequestOptions = Nothing) As UniTask(Of VectorStoreFilesBatch)
  overload: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve*
  nameWithType.vb: VectorStoreFilesBatchService.Retrieve(String, String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve(String, String, RequestOptions)
  name.vb: Retrieve(String, String, RequestOptions)
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync(System.String,CursorQuery,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync(System.String,CursorQuery,RequestOptions)
  id: ListAsync(System.String,CursorQuery,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService
  langs:
  - csharp
  - vb
  name: ListAsync(string, CursorQuery, RequestOptions)
  nameWithType: VectorStoreFilesBatchService.ListAsync(string, CursorQuery, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync(string, CursorQuery, RequestOptions)
  type: Method
  source:
    id: ListAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/VectorStores/VectorStoreFilesBatchService.cs
    startLine: 32
  namespace: Glitch9.AIDevKit.OpenAI.Services
  syntax:
    content: public UniTask<QueryResponse<VectorStoreFilesBatch>> ListAsync(string vectorStoreId, CursorQuery query = null, RequestOptions options = null)
    parameters:
    - id: vectorStoreId
      type: System.String
    - id: query
      type: CursorQuery
    - id: options
      type: RequestOptions
    return:
      type: UniTask{QueryResponse{Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch}}
    content.vb: Public Function ListAsync(vectorStoreId As String, query As CursorQuery = Nothing, options As RequestOptions = Nothing) As UniTask(Of QueryResponse(Of VectorStoreFilesBatch))
  overload: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync*
  nameWithType.vb: VectorStoreFilesBatchService.ListAsync(String, CursorQuery, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync(String, CursorQuery, RequestOptions)
  name.vb: ListAsync(String, CursorQuery, RequestOptions)
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync(System.String,System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync(System.String,System.String,RequestOptions)
  id: CancelAsync(System.String,System.String,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService
  langs:
  - csharp
  - vb
  name: CancelAsync(string, string, RequestOptions)
  nameWithType: VectorStoreFilesBatchService.CancelAsync(string, string, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync(string, string, RequestOptions)
  type: Method
  source:
    id: CancelAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/VectorStores/VectorStoreFilesBatchService.cs
    startLine: 37
  namespace: Glitch9.AIDevKit.OpenAI.Services
  syntax:
    content: public UniTask<VectorStoreFilesBatch> CancelAsync(string vectorStoreId, string batchId, RequestOptions options = null)
    parameters:
    - id: vectorStoreId
      type: System.String
    - id: batchId
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch}
    content.vb: Public Function CancelAsync(vectorStoreId As String, batchId As String, options As RequestOptions = Nothing) As UniTask(Of VectorStoreFilesBatch)
  overload: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync*
  nameWithType.vb: VectorStoreFilesBatchService.CancelAsync(String, String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync(String, String, RequestOptions)
  name.vb: CancelAsync(String, String, RequestOptions)
references:
- uid: Glitch9.AIDevKit.OpenAI.Services
  commentId: N:Glitch9.AIDevKit.OpenAI.Services
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI.Services
  nameWithType: Glitch9.AIDevKit.OpenAI.Services
  fullName: Glitch9.AIDevKit.OpenAI.Services
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Services
    name: Services
    href: Glitch9.AIDevKit.OpenAI.Services.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Services
    name: Services
    href: Glitch9.AIDevKit.OpenAI.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.#ctor*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.#ctor
  href: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.html#Glitch9_AIDevKit_OpenAI_Services_VectorStoreFilesBatchService__ctor_Glitch9_AIDevKit_OpenAI_OpenAI_RESTHeader___
  name: VectorStoreFilesBatchService
  nameWithType: VectorStoreFilesBatchService.VectorStoreFilesBatchService
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.VectorStoreFilesBatchService
  nameWithType.vb: VectorStoreFilesBatchService.New
  fullName.vb: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.New
  name.vb: New
- uid: Glitch9.AIDevKit.OpenAI.OpenAI
  commentId: T:Glitch9.AIDevKit.OpenAI.OpenAI
  parent: Glitch9.AIDevKit.OpenAI
  href: Glitch9.AIDevKit.OpenAI.OpenAI.html
  name: OpenAI
  nameWithType: OpenAI
  fullName: Glitch9.AIDevKit.OpenAI.OpenAI
- uid: RESTHeader[]
  isExternal: true
  name: RESTHeader[]
  nameWithType: RESTHeader[]
  fullName: RESTHeader[]
  nameWithType.vb: RESTHeader()
  fullName.vb: RESTHeader()
  name.vb: RESTHeader()
  spec.csharp:
  - uid: RESTHeader
    name: RESTHeader
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RESTHeader
    name: RESTHeader
    isExternal: true
  - name: (
  - name: )
- uid: Glitch9.AIDevKit.OpenAI
  commentId: N:Glitch9.AIDevKit.OpenAI
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI
  nameWithType: Glitch9.AIDevKit.OpenAI
  fullName: Glitch9.AIDevKit.OpenAI
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync
  href: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.html#Glitch9_AIDevKit_OpenAI_Services_VectorStoreFilesBatchService_CreateAsync_System_String_Glitch9_AIDevKit_OpenAI_VectorStoreFilesBatchRequest_
  name: CreateAsync
  nameWithType: VectorStoreFilesBatchService.CreateAsync
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CreateAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest
  commentId: T:Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest
  parent: Glitch9.AIDevKit.OpenAI
  href: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest.html
  name: VectorStoreFilesBatchRequest
  nameWithType: VectorStoreFilesBatchRequest
  fullName: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatchRequest
- uid: UniTask{Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch}
  commentId: '!:UniTask{Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch.html
  name: UniTask<VectorStoreFilesBatch>
  nameWithType: UniTask<VectorStoreFilesBatch>
  fullName: UniTask<Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch>
  nameWithType.vb: UniTask(Of VectorStoreFilesBatch)
  fullName.vb: UniTask(Of Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch)
  name.vb: UniTask(Of VectorStoreFilesBatch)
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch
    name: VectorStoreFilesBatch
    href: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch.html
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch
    name: VectorStoreFilesBatch
    href: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch.html
  - name: )
- uid: UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve
  href: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.html#Glitch9_AIDevKit_OpenAI_Services_VectorStoreFilesBatchService_Retrieve_System_String_System_String_RequestOptions_
  name: Retrieve
  nameWithType: VectorStoreFilesBatchService.Retrieve
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.Retrieve
- uid: RequestOptions
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: RequestOptions
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync
  href: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.html#Glitch9_AIDevKit_OpenAI_Services_VectorStoreFilesBatchService_ListAsync_System_String_CursorQuery_RequestOptions_
  name: ListAsync
  nameWithType: VectorStoreFilesBatchService.ListAsync
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.ListAsync
- uid: CursorQuery
  isExternal: true
  name: CursorQuery
  nameWithType: CursorQuery
  fullName: CursorQuery
- uid: UniTask{QueryResponse{Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch}}
  commentId: '!:UniTask{QueryResponse{Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch}}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch.html
  name: UniTask<QueryResponse<VectorStoreFilesBatch>>
  nameWithType: UniTask<QueryResponse<VectorStoreFilesBatch>>
  fullName: UniTask<QueryResponse<Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch>>
  nameWithType.vb: UniTask(Of QueryResponse(Of VectorStoreFilesBatch))
  fullName.vb: UniTask(Of QueryResponse(Of Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch))
  name.vb: UniTask(Of QueryResponse(Of VectorStoreFilesBatch))
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: QueryResponse`1
    name: QueryResponse
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch
    name: VectorStoreFilesBatch
    href: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: QueryResponse`1
    name: QueryResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch
    name: VectorStoreFilesBatch
    href: Glitch9.AIDevKit.OpenAI.VectorStoreFilesBatch.html
  - name: )
  - name: )
- uid: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync
  href: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.html#Glitch9_AIDevKit_OpenAI_Services_VectorStoreFilesBatchService_CancelAsync_System_String_System_String_RequestOptions_
  name: CancelAsync
  nameWithType: VectorStoreFilesBatchService.CancelAsync
  fullName: Glitch9.AIDevKit.OpenAI.Services.VectorStoreFilesBatchService.CancelAsync
