### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.Google.Status
  commentId: T:Glitch9.AIDevKit.Google.Status
  id: Status
  parent: Glitch9.AIDevKit.Google
  children:
  - Glitch9.AIDevKit.Google.Status.Code
  - Glitch9.AIDevKit.Google.Status.Details
  - Glitch9.AIDevKit.Google.Status.Message
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Status
  fullName: Glitch9.AIDevKit.Google.Status
  type: Class
  source:
    id: Status
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Models/Files/File.cs
    startLine: 173
  namespace: Glitch9.AIDevKit.Google
  summary: >-
    The Status type defines a logical error model that is suitable for different programming environments, 

    including REST APIs and RPC APIs. It is used by gRPC. 

    Each Status message contains three pieces of data: error code, error message, and error details.
  remarks: You can find out more about this error model and how to work with it in the <a href="https://cloud.google.com/apis/design/errors"> API Design Guide</a>.
  example: []
  syntax:
    content: public class Status
    content.vb: Public Class Status
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.Google.Status.Code
  commentId: P:Glitch9.AIDevKit.Google.Status.Code
  id: Code
  parent: Glitch9.AIDevKit.Google.Status
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: Status.Code
  fullName: Glitch9.AIDevKit.Google.Status.Code
  type: Property
  source:
    id: Code
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Models/Files/File.cs
    startLine: 192
  namespace: Glitch9.AIDevKit.Google
  summary: The status code, which should be an enum value of google.rpc.Code.
  example: []
  syntax:
    content: public int Code { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Code As Integer
  overload: Glitch9.AIDevKit.Google.Status.Code*
- uid: Glitch9.AIDevKit.Google.Status.Message
  commentId: P:Glitch9.AIDevKit.Google.Status.Message
  id: Message
  parent: Glitch9.AIDevKit.Google.Status
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Status.Message
  fullName: Glitch9.AIDevKit.Google.Status.Message
  type: Property
  source:
    id: Message
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Models/Files/File.cs
    startLine: 200
  namespace: Glitch9.AIDevKit.Google
  summary: >-
    A developer-facing error message, which should be in English. 

    Any user-facing error message should be localized and sent in the 

    <a href="https://ai.google.dev/api/rest/Shared.Types/Operation#Status.FIELDS.details"> google.rpc.Status.details</a> field, 

    or localized by the client.
  example: []
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: Glitch9.AIDevKit.Google.Status.Message*
- uid: Glitch9.AIDevKit.Google.Status.Details
  commentId: P:Glitch9.AIDevKit.Google.Status.Details
  id: Details
  parent: Glitch9.AIDevKit.Google.Status
  langs:
  - csharp
  - vb
  name: Details
  nameWithType: Status.Details
  fullName: Glitch9.AIDevKit.Google.Status.Details
  type: Property
  source:
    id: Details
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Models/Files/File.cs
    startLine: 207
  namespace: Glitch9.AIDevKit.Google
  summary: >-
    A list of messages that carry the error details. There is a common set of message types for APIs to use.

    An object containing fields of an arbitrary type. An additional field "@type" contains a URI identifying the type. 

    <p>Example: { "id": 1234, "@type": "types.example.com/standard/id" }.</p>
  example: []
  syntax:
    content: public Dictionary<string, string> Details { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property Details As Dictionary(Of String, String)
  overload: Glitch9.AIDevKit.Google.Status.Details*
references:
- uid: Glitch9.AIDevKit.Google
  commentId: N:Glitch9.AIDevKit.Google
  href: Glitch9.html
  name: Glitch9.AIDevKit.Google
  nameWithType: Glitch9.AIDevKit.Google
  fullName: Glitch9.AIDevKit.Google
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.Google.Status.Code*
  commentId: Overload:Glitch9.AIDevKit.Google.Status.Code
  href: Glitch9.AIDevKit.Google.Status.html#Glitch9_AIDevKit_Google_Status_Code
  name: Code
  nameWithType: Status.Code
  fullName: Glitch9.AIDevKit.Google.Status.Code
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Glitch9.AIDevKit.Google.Status.Message*
  commentId: Overload:Glitch9.AIDevKit.Google.Status.Message
  href: Glitch9.AIDevKit.Google.Status.html#Glitch9_AIDevKit_Google_Status_Message
  name: Message
  nameWithType: Status.Message
  fullName: Glitch9.AIDevKit.Google.Status.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Glitch9.AIDevKit.Google.Status.Details*
  commentId: Overload:Glitch9.AIDevKit.Google.Status.Details
  href: Glitch9.AIDevKit.Google.Status.html#Glitch9_AIDevKit_Google_Status_Details
  name: Details
  nameWithType: Status.Details
  fullName: Glitch9.AIDevKit.Google.Status.Details
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
