### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.ChatChoice
  commentId: T:Glitch9.AIDevKit.ChatChoice
  id: ChatChoice
  parent: Glitch9.AIDevKit
  children:
  - Glitch9.AIDevKit.ChatChoice.Delta
  - Glitch9.AIDevKit.ChatChoice.FinishReason
  - Glitch9.AIDevKit.ChatChoice.Index
  - Glitch9.AIDevKit.ChatChoice.Logprobs
  - Glitch9.AIDevKit.ChatChoice.Message
  - Glitch9.AIDevKit.ChatChoice.Text
  langs:
  - csharp
  - vb
  name: ChatChoice
  nameWithType: ChatChoice
  fullName: Glitch9.AIDevKit.ChatChoice
  type: Class
  source:
    id: ChatChoice
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Common/Models/Chat/Common/ChatChoice.cs
    startLine: 5
  namespace: Glitch9.AIDevKit
  syntax:
    content: public class ChatChoice
    content.vb: Public Class ChatChoice
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.ChatChoice.Index
  commentId: P:Glitch9.AIDevKit.ChatChoice.Index
  id: Index
  parent: Glitch9.AIDevKit.ChatChoice
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: ChatChoice.Index
  fullName: Glitch9.AIDevKit.ChatChoice.Index
  type: Property
  source:
    id: Index
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Common/Models/Chat/Common/ChatChoice.cs
    startLine: 10
  namespace: Glitch9.AIDevKit
  summary: The index of the choice in the list of choices.
  example: []
  syntax:
    content: public int Index { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Index As Integer
  overload: Glitch9.AIDevKit.ChatChoice.Index*
- uid: Glitch9.AIDevKit.ChatChoice.Message
  commentId: P:Glitch9.AIDevKit.ChatChoice.Message
  id: Message
  parent: Glitch9.AIDevKit.ChatChoice
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ChatChoice.Message
  fullName: Glitch9.AIDevKit.ChatChoice.Message
  type: Property
  source:
    id: Message
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Common/Models/Chat/Common/ChatChoice.cs
    startLine: 15
  namespace: Glitch9.AIDevKit
  summary: A chat completion message generated by the model.
  example: []
  syntax:
    content: public ChatMessage Message { get; set; }
    parameters: []
    return:
      type: Glitch9.AIDevKit.ChatMessage
    content.vb: Public Property Message As ChatMessage
  overload: Glitch9.AIDevKit.ChatChoice.Message*
- uid: Glitch9.AIDevKit.ChatChoice.Delta
  commentId: P:Glitch9.AIDevKit.ChatChoice.Delta
  id: Delta
  parent: Glitch9.AIDevKit.ChatChoice
  langs:
  - csharp
  - vb
  name: Delta
  nameWithType: ChatChoice.Delta
  fullName: Glitch9.AIDevKit.ChatChoice.Delta
  type: Property
  source:
    id: Delta
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Common/Models/Chat/Common/ChatChoice.cs
    startLine: 20
  namespace: Glitch9.AIDevKit
  summary: A streaming chat completion message generated by the model.
  example: []
  syntax:
    content: public ChatDelta Delta { get; set; }
    parameters: []
    return:
      type: Glitch9.AIDevKit.ChatDelta
    content.vb: Public Property Delta As ChatDelta
  overload: Glitch9.AIDevKit.ChatChoice.Delta*
- uid: Glitch9.AIDevKit.ChatChoice.Text
  commentId: P:Glitch9.AIDevKit.ChatChoice.Text
  id: Text
  parent: Glitch9.AIDevKit.ChatChoice
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: ChatChoice.Text
  fullName: Glitch9.AIDevKit.ChatChoice.Text
  type: Property
  source:
    id: Text
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Common/Models/Chat/Common/ChatChoice.cs
    startLine: 25
  namespace: Glitch9.AIDevKit
  summary: Only used for legacy model requests.
  example: []
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: Glitch9.AIDevKit.ChatChoice.Text*
- uid: Glitch9.AIDevKit.ChatChoice.Logprobs
  commentId: P:Glitch9.AIDevKit.ChatChoice.Logprobs
  id: Logprobs
  parent: Glitch9.AIDevKit.ChatChoice
  langs:
  - csharp
  - vb
  name: Logprobs
  nameWithType: ChatChoice.Logprobs
  fullName: Glitch9.AIDevKit.ChatChoice.Logprobs
  type: Property
  source:
    id: Logprobs
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Common/Models/Chat/Common/ChatChoice.cs
    startLine: 30
  namespace: Glitch9.AIDevKit
  summary: Log probability information for the choice.
  example: []
  syntax:
    content: public Logprobs Logprobs { get; set; }
    parameters: []
    return:
      type: Glitch9.AIDevKit.Logprobs
    content.vb: Public Property Logprobs As Logprobs
  overload: Glitch9.AIDevKit.ChatChoice.Logprobs*
- uid: Glitch9.AIDevKit.ChatChoice.FinishReason
  commentId: P:Glitch9.AIDevKit.ChatChoice.FinishReason
  id: FinishReason
  parent: Glitch9.AIDevKit.ChatChoice
  langs:
  - csharp
  - vb
  name: FinishReason
  nameWithType: ChatChoice.FinishReason
  fullName: Glitch9.AIDevKit.ChatChoice.FinishReason
  type: Property
  source:
    id: FinishReason
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Common/Models/Chat/Common/ChatChoice.cs
    startLine: 39
  namespace: Glitch9.AIDevKit
  summary: >-
    The reason the model stopped generating tokens. 

    This will be stopped if the model hit a natural stop point or a provided stop sequence, 

    length if the maximum number of tokens specified in the request was reached, 

    content_filter if content was omitted due to a flag from our content filters, 

    or function_call if the model called a Function.
  example: []
  syntax:
    content: public StopReason? FinishReason { get; set; }
    parameters: []
    return:
      type: System.Nullable{Glitch9.AIDevKit.StopReason}
    content.vb: Public Property FinishReason As StopReason?
  overload: Glitch9.AIDevKit.ChatChoice.FinishReason*
references:
- uid: Glitch9.AIDevKit
  commentId: N:Glitch9.AIDevKit
  href: Glitch9.html
  name: Glitch9.AIDevKit
  nameWithType: Glitch9.AIDevKit
  fullName: Glitch9.AIDevKit
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.ChatChoice.Index*
  commentId: Overload:Glitch9.AIDevKit.ChatChoice.Index
  href: Glitch9.AIDevKit.ChatChoice.html#Glitch9_AIDevKit_ChatChoice_Index
  name: Index
  nameWithType: ChatChoice.Index
  fullName: Glitch9.AIDevKit.ChatChoice.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Glitch9.AIDevKit.ChatChoice.Message*
  commentId: Overload:Glitch9.AIDevKit.ChatChoice.Message
  href: Glitch9.AIDevKit.ChatChoice.html#Glitch9_AIDevKit_ChatChoice_Message
  name: Message
  nameWithType: ChatChoice.Message
  fullName: Glitch9.AIDevKit.ChatChoice.Message
- uid: Glitch9.AIDevKit.ChatMessage
  commentId: T:Glitch9.AIDevKit.ChatMessage
  parent: Glitch9.AIDevKit
  href: Glitch9.AIDevKit.ChatMessage.html
  name: ChatMessage
  nameWithType: ChatMessage
  fullName: Glitch9.AIDevKit.ChatMessage
- uid: Glitch9.AIDevKit.ChatChoice.Delta*
  commentId: Overload:Glitch9.AIDevKit.ChatChoice.Delta
  href: Glitch9.AIDevKit.ChatChoice.html#Glitch9_AIDevKit_ChatChoice_Delta
  name: Delta
  nameWithType: ChatChoice.Delta
  fullName: Glitch9.AIDevKit.ChatChoice.Delta
- uid: Glitch9.AIDevKit.ChatDelta
  commentId: T:Glitch9.AIDevKit.ChatDelta
  parent: Glitch9.AIDevKit
  href: Glitch9.AIDevKit.ChatDelta.html
  name: ChatDelta
  nameWithType: ChatDelta
  fullName: Glitch9.AIDevKit.ChatDelta
- uid: Glitch9.AIDevKit.ChatChoice.Text*
  commentId: Overload:Glitch9.AIDevKit.ChatChoice.Text
  href: Glitch9.AIDevKit.ChatChoice.html#Glitch9_AIDevKit_ChatChoice_Text
  name: Text
  nameWithType: ChatChoice.Text
  fullName: Glitch9.AIDevKit.ChatChoice.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Glitch9.AIDevKit.ChatChoice.Logprobs*
  commentId: Overload:Glitch9.AIDevKit.ChatChoice.Logprobs
  href: Glitch9.AIDevKit.ChatChoice.html#Glitch9_AIDevKit_ChatChoice_Logprobs
  name: Logprobs
  nameWithType: ChatChoice.Logprobs
  fullName: Glitch9.AIDevKit.ChatChoice.Logprobs
- uid: Glitch9.AIDevKit.Logprobs
  commentId: T:Glitch9.AIDevKit.Logprobs
  parent: Glitch9.AIDevKit
  href: Glitch9.AIDevKit.Logprobs.html
  name: Logprobs
  nameWithType: Logprobs
  fullName: Glitch9.AIDevKit.Logprobs
- uid: Glitch9.AIDevKit.ChatChoice.FinishReason*
  commentId: Overload:Glitch9.AIDevKit.ChatChoice.FinishReason
  href: Glitch9.AIDevKit.ChatChoice.html#Glitch9_AIDevKit_ChatChoice_FinishReason
  name: FinishReason
  nameWithType: ChatChoice.FinishReason
  fullName: Glitch9.AIDevKit.ChatChoice.FinishReason
- uid: System.Nullable{Glitch9.AIDevKit.StopReason}
  commentId: T:System.Nullable{Glitch9.AIDevKit.StopReason}
  parent: System
  definition: System.Nullable`1
  href: Glitch9.AIDevKit.StopReason.html
  name: StopReason?
  nameWithType: StopReason?
  fullName: Glitch9.AIDevKit.StopReason?
  spec.csharp:
  - uid: Glitch9.AIDevKit.StopReason
    name: StopReason
    href: Glitch9.AIDevKit.StopReason.html
  - name: '?'
  spec.vb:
  - uid: Glitch9.AIDevKit.StopReason
    name: StopReason
    href: Glitch9.AIDevKit.StopReason.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
