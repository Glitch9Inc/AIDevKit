### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.OpenAI.ThreadExtensions
  commentId: T:Glitch9.AIDevKit.OpenAI.ThreadExtensions
  id: ThreadExtensions
  parent: Glitch9.AIDevKit.OpenAI
  children:
  - Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync(Glitch9.AIDevKit.OpenAI.Thread,System.Int32)
  langs:
  - csharp
  - vb
  name: ThreadExtensions
  nameWithType: ThreadExtensions
  fullName: Glitch9.AIDevKit.OpenAI.ThreadExtensions
  type: Class
  source:
    id: ThreadExtensions
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Assistants/Threads/Thread.cs
    startLine: 19
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public static class ThreadExtensions
    content.vb: Public Module ThreadExtensions
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync(Glitch9.AIDevKit.OpenAI.Thread,System.Int32)
  commentId: M:Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync(Glitch9.AIDevKit.OpenAI.Thread,System.Int32)
  id: GetMessagesAsync(Glitch9.AIDevKit.OpenAI.Thread,System.Int32)
  isExtensionMethod: true
  parent: Glitch9.AIDevKit.OpenAI.ThreadExtensions
  langs:
  - csharp
  - vb
  name: GetMessagesAsync(Thread, int)
  nameWithType: ThreadExtensions.GetMessagesAsync(Thread, int)
  fullName: Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync(Glitch9.AIDevKit.OpenAI.Thread, int)
  type: Method
  source:
    id: GetMessagesAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Assistants/Threads/Thread.cs
    startLine: 21
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public static UniTask<ThreadMessage[]> GetMessagesAsync(this Thread thread, int limit = 20)
    parameters:
    - id: thread
      type: Glitch9.AIDevKit.OpenAI.Thread
    - id: limit
      type: System.Int32
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.ThreadMessage[]}
    content.vb: Public Shared Function GetMessagesAsync(thread As Thread, limit As Integer = 20) As UniTask(Of ThreadMessage())
  overload: Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync*
  nameWithType.vb: ThreadExtensions.GetMessagesAsync(Thread, Integer)
  fullName.vb: Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync(Glitch9.AIDevKit.OpenAI.Thread, Integer)
  name.vb: GetMessagesAsync(Thread, Integer)
references:
- uid: Glitch9.AIDevKit.OpenAI
  commentId: N:Glitch9.AIDevKit.OpenAI
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI
  nameWithType: Glitch9.AIDevKit.OpenAI
  fullName: Glitch9.AIDevKit.OpenAI
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync
  href: Glitch9.AIDevKit.OpenAI.ThreadExtensions.html#Glitch9_AIDevKit_OpenAI_ThreadExtensions_GetMessagesAsync_Glitch9_AIDevKit_OpenAI_Thread_System_Int32_
  name: GetMessagesAsync
  nameWithType: ThreadExtensions.GetMessagesAsync
  fullName: Glitch9.AIDevKit.OpenAI.ThreadExtensions.GetMessagesAsync
- uid: Glitch9.AIDevKit.OpenAI.Thread
  commentId: T:Glitch9.AIDevKit.OpenAI.Thread
  parent: Glitch9.AIDevKit.OpenAI
  href: Glitch9.AIDevKit.OpenAI.Thread.html
  name: Thread
  nameWithType: Thread
  fullName: Glitch9.AIDevKit.OpenAI.Thread
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UniTask{Glitch9.AIDevKit.OpenAI.ThreadMessage[]}
  commentId: '!:UniTask{Glitch9.AIDevKit.OpenAI.ThreadMessage[]}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.OpenAI.ThreadMessage.html
  name: UniTask<ThreadMessage[]>
  nameWithType: UniTask<ThreadMessage[]>
  fullName: UniTask<Glitch9.AIDevKit.OpenAI.ThreadMessage[]>
  nameWithType.vb: UniTask(Of ThreadMessage())
  fullName.vb: UniTask(Of Glitch9.AIDevKit.OpenAI.ThreadMessage())
  name.vb: UniTask(Of ThreadMessage())
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.OpenAI.ThreadMessage
    name: ThreadMessage
    href: Glitch9.AIDevKit.OpenAI.ThreadMessage.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.OpenAI.ThreadMessage
    name: ThreadMessage
    href: Glitch9.AIDevKit.OpenAI.ThreadMessage.html
  - name: (
  - name: )
  - name: )
- uid: UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
