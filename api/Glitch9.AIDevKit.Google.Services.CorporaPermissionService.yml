### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  commentId: T:Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  id: CorporaPermissionService
  parent: Glitch9.AIDevKit.Google.Services
  children:
  - Glitch9.AIDevKit.Google.Services.CorporaPermissionService.#ctor(Glitch9.AIDevKit.Google.GenerativeAI)
  - Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CreateAsync(Glitch9.AIDevKit.Google.Permission)
  - Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync(System.String,RequestOptions)
  - Glitch9.AIDevKit.Google.Services.CorporaPermissionService.ListAsync(TokenQuery,RequestOptions)
  - Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync(System.String,RequestOptions)
  - Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync(System.String,System.Collections.Generic.IEnumerable{UpdateMask},RequestOptions)
  langs:
  - csharp
  - vb
  name: CorporaPermissionService
  nameWithType: CorporaPermissionService
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  type: Class
  source:
    id: CorporaPermissionService
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 20
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: 'public class CorporaPermissionService : CRUDServiceBase<GenerativeAI>'
    content.vb: Public Class CorporaPermissionService Inherits CRUDServiceBase(Of GenerativeAI)
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.#ctor(Glitch9.AIDevKit.Google.GenerativeAI)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.#ctor(Glitch9.AIDevKit.Google.GenerativeAI)
  id: '#ctor(Glitch9.AIDevKit.Google.GenerativeAI)'
  parent: Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  langs:
  - csharp
  - vb
  name: CorporaPermissionService(GenerativeAI)
  nameWithType: CorporaPermissionService.CorporaPermissionService(GenerativeAI)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CorporaPermissionService(Glitch9.AIDevKit.Google.GenerativeAI)
  type: Constructor
  source:
    id: .ctor
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 24
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public CorporaPermissionService(GenerativeAI client)
    parameters:
    - id: client
      type: Glitch9.AIDevKit.Google.GenerativeAI
    content.vb: Public Sub New(client As GenerativeAI)
  overload: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.#ctor*
  nameWithType.vb: CorporaPermissionService.New(GenerativeAI)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.New(Glitch9.AIDevKit.Google.GenerativeAI)
  name.vb: New(GenerativeAI)
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CreateAsync(Glitch9.AIDevKit.Google.Permission)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CreateAsync(Glitch9.AIDevKit.Google.Permission)
  id: CreateAsync(Glitch9.AIDevKit.Google.Permission)
  parent: Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  langs:
  - csharp
  - vb
  name: CreateAsync(Permission)
  nameWithType: CorporaPermissionService.CreateAsync(Permission)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CreateAsync(Glitch9.AIDevKit.Google.Permission)
  type: Method
  source:
    id: CreateAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 25
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<Permission> CreateAsync(Permission req)
    parameters:
    - id: req
      type: Glitch9.AIDevKit.Google.Permission
    return:
      type: UniTask{Glitch9.AIDevKit.Google.Permission}
    content.vb: Public Function CreateAsync(req As Permission) As UniTask(Of Permission)
  overload: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CreateAsync*
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync(System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync(System.String,RequestOptions)
  id: DeleteAsync(System.String,RequestOptions)
  parent: Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  langs:
  - csharp
  - vb
  name: DeleteAsync(string, RequestOptions)
  nameWithType: CorporaPermissionService.DeleteAsync(string, RequestOptions)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync(string, RequestOptions)
  type: Method
  source:
    id: DeleteAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 27
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<bool> DeleteAsync(string id, RequestOptions options = null)
    parameters:
    - id: id
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{System.Boolean}
    content.vb: Public Function DeleteAsync(id As String, options As RequestOptions = Nothing) As UniTask(Of Boolean)
  overload: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync*
  nameWithType.vb: CorporaPermissionService.DeleteAsync(String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync(String, RequestOptions)
  name.vb: DeleteAsync(String, RequestOptions)
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync(System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync(System.String,RequestOptions)
  id: RetrieveAsync(System.String,RequestOptions)
  parent: Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  langs:
  - csharp
  - vb
  name: RetrieveAsync(string, RequestOptions)
  nameWithType: CorporaPermissionService.RetrieveAsync(string, RequestOptions)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync(string, RequestOptions)
  type: Method
  source:
    id: RetrieveAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 29
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<Permission> RetrieveAsync(string id, RequestOptions options = null)
    parameters:
    - id: id
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.Google.Permission}
    content.vb: Public Function RetrieveAsync(id As String, options As RequestOptions = Nothing) As UniTask(Of Permission)
  overload: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync*
  nameWithType.vb: CorporaPermissionService.RetrieveAsync(String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync(String, RequestOptions)
  name.vb: RetrieveAsync(String, RequestOptions)
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.ListAsync(TokenQuery,RequestOptions)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.ListAsync(TokenQuery,RequestOptions)
  id: ListAsync(TokenQuery,RequestOptions)
  parent: Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  langs:
  - csharp
  - vb
  name: ListAsync(TokenQuery, RequestOptions)
  nameWithType: CorporaPermissionService.ListAsync(TokenQuery, RequestOptions)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.ListAsync(TokenQuery, RequestOptions)
  type: Method
  source:
    id: ListAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 31
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<QueryResponse<Permission>> ListAsync(TokenQuery query = null, RequestOptions options = null)
    parameters:
    - id: query
      type: TokenQuery
    - id: options
      type: RequestOptions
    return:
      type: UniTask{QueryResponse{Glitch9.AIDevKit.Google.Permission}}
    content.vb: Public Function ListAsync(query As TokenQuery = Nothing, options As RequestOptions = Nothing) As UniTask(Of QueryResponse(Of Permission))
  overload: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.ListAsync*
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync(System.String,System.Collections.Generic.IEnumerable{UpdateMask},RequestOptions)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync(System.String,System.Collections.Generic.IEnumerable{UpdateMask},RequestOptions)
  id: UpdateAsync(System.String,System.Collections.Generic.IEnumerable{UpdateMask},RequestOptions)
  parent: Glitch9.AIDevKit.Google.Services.CorporaPermissionService
  langs:
  - csharp
  - vb
  name: UpdateAsync(string, IEnumerable<UpdateMask>, RequestOptions)
  nameWithType: CorporaPermissionService.UpdateAsync(string, IEnumerable<UpdateMask>, RequestOptions)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync(string, System.Collections.Generic.IEnumerable<UpdateMask>, RequestOptions)
  type: Method
  source:
    id: UpdateAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 33
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<Permission> UpdateAsync(string id, IEnumerable<UpdateMask> updateMasks, RequestOptions options = null)
    parameters:
    - id: id
      type: System.String
    - id: updateMasks
      type: System.Collections.Generic.IEnumerable{UpdateMask}
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.Google.Permission}
    content.vb: Public Function UpdateAsync(id As String, updateMasks As IEnumerable(Of UpdateMask), options As RequestOptions = Nothing) As UniTask(Of Permission)
  overload: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync*
  nameWithType.vb: CorporaPermissionService.UpdateAsync(String, IEnumerable(Of UpdateMask), RequestOptions)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync(String, System.Collections.Generic.IEnumerable(Of UpdateMask), RequestOptions)
  name.vb: UpdateAsync(String, IEnumerable(Of UpdateMask), RequestOptions)
references:
- uid: Glitch9.AIDevKit.Google.Services
  commentId: N:Glitch9.AIDevKit.Google.Services
  href: Glitch9.html
  name: Glitch9.AIDevKit.Google.Services
  nameWithType: Glitch9.AIDevKit.Google.Services
  fullName: Glitch9.AIDevKit.Google.Services
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
  - name: .
  - uid: Glitch9.AIDevKit.Google.Services
    name: Services
    href: Glitch9.AIDevKit.Google.Services.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
  - name: .
  - uid: Glitch9.AIDevKit.Google.Services
    name: Services
    href: Glitch9.AIDevKit.Google.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.#ctor*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.#ctor
  href: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.html#Glitch9_AIDevKit_Google_Services_CorporaPermissionService__ctor_Glitch9_AIDevKit_Google_GenerativeAI_
  name: CorporaPermissionService
  nameWithType: CorporaPermissionService.CorporaPermissionService
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CorporaPermissionService
  nameWithType.vb: CorporaPermissionService.New
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.New
  name.vb: New
- uid: Glitch9.AIDevKit.Google.GenerativeAI
  commentId: T:Glitch9.AIDevKit.Google.GenerativeAI
  parent: Glitch9.AIDevKit.Google
  href: Glitch9.AIDevKit.Google.GenerativeAI.html
  name: GenerativeAI
  nameWithType: GenerativeAI
  fullName: Glitch9.AIDevKit.Google.GenerativeAI
- uid: Glitch9.AIDevKit.Google
  commentId: N:Glitch9.AIDevKit.Google
  href: Glitch9.html
  name: Glitch9.AIDevKit.Google
  nameWithType: Glitch9.AIDevKit.Google
  fullName: Glitch9.AIDevKit.Google
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CreateAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CreateAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.html#Glitch9_AIDevKit_Google_Services_CorporaPermissionService_CreateAsync_Glitch9_AIDevKit_Google_Permission_
  name: CreateAsync
  nameWithType: CorporaPermissionService.CreateAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.CreateAsync
- uid: Glitch9.AIDevKit.Google.Permission
  commentId: T:Glitch9.AIDevKit.Google.Permission
  parent: Glitch9.AIDevKit.Google
  href: Glitch9.AIDevKit.Google.Permission.html
  name: Permission
  nameWithType: Permission
  fullName: Glitch9.AIDevKit.Google.Permission
- uid: UniTask{Glitch9.AIDevKit.Google.Permission}
  commentId: '!:UniTask{Glitch9.AIDevKit.Google.Permission}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.Google.Permission.html
  name: UniTask<Permission>
  nameWithType: UniTask<Permission>
  fullName: UniTask<Glitch9.AIDevKit.Google.Permission>
  nameWithType.vb: UniTask(Of Permission)
  fullName.vb: UniTask(Of Glitch9.AIDevKit.Google.Permission)
  name.vb: UniTask(Of Permission)
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.Google.Permission
    name: Permission
    href: Glitch9.AIDevKit.Google.Permission.html
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Google.Permission
    name: Permission
    href: Glitch9.AIDevKit.Google.Permission.html
  - name: )
- uid: UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.html#Glitch9_AIDevKit_Google_Services_CorporaPermissionService_DeleteAsync_System_String_RequestOptions_
  name: DeleteAsync
  nameWithType: CorporaPermissionService.DeleteAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.DeleteAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RequestOptions
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: RequestOptions
- uid: UniTask{System.Boolean}
  commentId: '!:UniTask{System.Boolean}'
  definition: UniTask`1
  name: UniTask<bool>
  nameWithType: UniTask<bool>
  fullName: UniTask<bool>
  nameWithType.vb: UniTask(Of Boolean)
  fullName.vb: UniTask(Of Boolean)
  name.vb: UniTask(Of Boolean)
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.html#Glitch9_AIDevKit_Google_Services_CorporaPermissionService_RetrieveAsync_System_String_RequestOptions_
  name: RetrieveAsync
  nameWithType: CorporaPermissionService.RetrieveAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.RetrieveAsync
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.ListAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.ListAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.html#Glitch9_AIDevKit_Google_Services_CorporaPermissionService_ListAsync_TokenQuery_RequestOptions_
  name: ListAsync
  nameWithType: CorporaPermissionService.ListAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.ListAsync
- uid: TokenQuery
  isExternal: true
  name: TokenQuery
  nameWithType: TokenQuery
  fullName: TokenQuery
- uid: UniTask{QueryResponse{Glitch9.AIDevKit.Google.Permission}}
  commentId: '!:UniTask{QueryResponse{Glitch9.AIDevKit.Google.Permission}}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.Google.Permission.html
  name: UniTask<QueryResponse<Permission>>
  nameWithType: UniTask<QueryResponse<Permission>>
  fullName: UniTask<QueryResponse<Glitch9.AIDevKit.Google.Permission>>
  nameWithType.vb: UniTask(Of QueryResponse(Of Permission))
  fullName.vb: UniTask(Of QueryResponse(Of Glitch9.AIDevKit.Google.Permission))
  name.vb: UniTask(Of QueryResponse(Of Permission))
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: QueryResponse`1
    name: QueryResponse
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.Google.Permission
    name: Permission
    href: Glitch9.AIDevKit.Google.Permission.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: QueryResponse`1
    name: QueryResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Google.Permission
    name: Permission
    href: Glitch9.AIDevKit.Google.Permission.html
  - name: )
  - name: )
- uid: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.html#Glitch9_AIDevKit_Google_Services_CorporaPermissionService_UpdateAsync_System_String_System_Collections_Generic_IEnumerable_UpdateMask__RequestOptions_
  name: UpdateAsync
  nameWithType: CorporaPermissionService.UpdateAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaPermissionService.UpdateAsync
- uid: System.Collections.Generic.IEnumerable{UpdateMask}
  commentId: T:System.Collections.Generic.IEnumerable{UpdateMask}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UpdateMask>
  nameWithType: IEnumerable<UpdateMask>
  fullName: System.Collections.Generic.IEnumerable<UpdateMask>
  nameWithType.vb: IEnumerable(Of UpdateMask)
  fullName.vb: System.Collections.Generic.IEnumerable(Of UpdateMask)
  name.vb: IEnumerable(Of UpdateMask)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: UpdateMask
    name: UpdateMask
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UpdateMask
    name: UpdateMask
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
