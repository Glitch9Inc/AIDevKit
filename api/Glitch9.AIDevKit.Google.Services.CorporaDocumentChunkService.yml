### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  commentId: T:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  id: CorporaDocumentChunkService
  parent: Glitch9.AIDevKit.Google.Services
  children:
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.#ctor(Glitch9.AIDevKit.Google.GenerativeAI)
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateAsync(Glitch9.AIDevKit.Google.Chunk)
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.CreateChunkRequest},System.String,System.String)
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync(System.String,System.String,System.String,RequestOptions)
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.DeleteChunkRequest},System.String,System.String)
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync(System.String,System.String,TokenQuery,RequestOptions)
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync(System.String,System.String,System.String,RequestOptions)
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{UpdateMask},RequestOptions)
  - Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.UpdateChunkRequest},System.String,System.String)
  langs:
  - csharp
  - vb
  name: CorporaDocumentChunkService
  nameWithType: CorporaDocumentChunkService
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  type: Class
  source:
    id: CorporaDocumentChunkService
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 58
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: 'public class CorporaDocumentChunkService : CRUDServiceBase<GenerativeAI>'
    content.vb: Public Class CorporaDocumentChunkService Inherits CRUDServiceBase(Of GenerativeAI)
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.#ctor(Glitch9.AIDevKit.Google.GenerativeAI)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.#ctor(Glitch9.AIDevKit.Google.GenerativeAI)
  id: '#ctor(Glitch9.AIDevKit.Google.GenerativeAI)'
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: CorporaDocumentChunkService(GenerativeAI)
  nameWithType: CorporaDocumentChunkService.CorporaDocumentChunkService(GenerativeAI)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CorporaDocumentChunkService(Glitch9.AIDevKit.Google.GenerativeAI)
  type: Constructor
  source:
    id: .ctor
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 62
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public CorporaDocumentChunkService(GenerativeAI client)
    parameters:
    - id: client
      type: Glitch9.AIDevKit.Google.GenerativeAI
    content.vb: Public Sub New(client As GenerativeAI)
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.#ctor*
  nameWithType.vb: CorporaDocumentChunkService.New(GenerativeAI)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.New(Glitch9.AIDevKit.Google.GenerativeAI)
  name.vb: New(GenerativeAI)
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateAsync(Glitch9.AIDevKit.Google.Chunk)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateAsync(Glitch9.AIDevKit.Google.Chunk)
  id: CreateAsync(Glitch9.AIDevKit.Google.Chunk)
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: CreateAsync(Chunk)
  nameWithType: CorporaDocumentChunkService.CreateAsync(Chunk)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateAsync(Glitch9.AIDevKit.Google.Chunk)
  type: Method
  source:
    id: CreateAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 63
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<Chunk> CreateAsync(Chunk req)
    parameters:
    - id: req
      type: Glitch9.AIDevKit.Google.Chunk
    return:
      type: UniTask{Glitch9.AIDevKit.Google.Chunk}
    content.vb: Public Function CreateAsync(req As Chunk) As UniTask(Of Chunk)
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateAsync*
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync(System.String,System.String,System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync(System.String,System.String,System.String,RequestOptions)
  id: DeleteAsync(System.String,System.String,System.String,RequestOptions)
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: DeleteAsync(string, string, string, RequestOptions)
  nameWithType: CorporaDocumentChunkService.DeleteAsync(string, string, string, RequestOptions)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync(string, string, string, RequestOptions)
  type: Method
  source:
    id: DeleteAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 64
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<bool> DeleteAsync(string corpusId, string documentId, string chunkId, RequestOptions options = null)
    parameters:
    - id: corpusId
      type: System.String
    - id: documentId
      type: System.String
    - id: chunkId
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{System.Boolean}
    content.vb: Public Function DeleteAsync(corpusId As String, documentId As String, chunkId As String, options As RequestOptions = Nothing) As UniTask(Of Boolean)
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync*
  nameWithType.vb: CorporaDocumentChunkService.DeleteAsync(String, String, String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync(String, String, String, RequestOptions)
  name.vb: DeleteAsync(String, String, String, RequestOptions)
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync(System.String,System.String,System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync(System.String,System.String,System.String,RequestOptions)
  id: RetrieveAsync(System.String,System.String,System.String,RequestOptions)
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: RetrieveAsync(string, string, string, RequestOptions)
  nameWithType: CorporaDocumentChunkService.RetrieveAsync(string, string, string, RequestOptions)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync(string, string, string, RequestOptions)
  type: Method
  source:
    id: RetrieveAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 66
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<Chunk> RetrieveAsync(string corpusId, string documentId, string chunkId, RequestOptions options = null)
    parameters:
    - id: corpusId
      type: System.String
    - id: documentId
      type: System.String
    - id: chunkId
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.Google.Chunk}
    content.vb: Public Function RetrieveAsync(corpusId As String, documentId As String, chunkId As String, options As RequestOptions = Nothing) As UniTask(Of Chunk)
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync*
  nameWithType.vb: CorporaDocumentChunkService.RetrieveAsync(String, String, String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync(String, String, String, RequestOptions)
  name.vb: RetrieveAsync(String, String, String, RequestOptions)
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync(System.String,System.String,TokenQuery,RequestOptions)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync(System.String,System.String,TokenQuery,RequestOptions)
  id: ListAsync(System.String,System.String,TokenQuery,RequestOptions)
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: ListAsync(string, string, TokenQuery, RequestOptions)
  nameWithType: CorporaDocumentChunkService.ListAsync(string, string, TokenQuery, RequestOptions)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync(string, string, TokenQuery, RequestOptions)
  type: Method
  source:
    id: ListAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 68
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<QueryResponse<Chunk>> ListAsync(string corpusId, string documentId, TokenQuery query = null, RequestOptions options = null)
    parameters:
    - id: corpusId
      type: System.String
    - id: documentId
      type: System.String
    - id: query
      type: TokenQuery
    - id: options
      type: RequestOptions
    return:
      type: UniTask{QueryResponse{Glitch9.AIDevKit.Google.Chunk}}
    content.vb: Public Function ListAsync(corpusId As String, documentId As String, query As TokenQuery = Nothing, options As RequestOptions = Nothing) As UniTask(Of QueryResponse(Of Chunk))
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync*
  nameWithType.vb: CorporaDocumentChunkService.ListAsync(String, String, TokenQuery, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync(String, String, TokenQuery, RequestOptions)
  name.vb: ListAsync(String, String, TokenQuery, RequestOptions)
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{UpdateMask},RequestOptions)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{UpdateMask},RequestOptions)
  id: UpdateAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{UpdateMask},RequestOptions)
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: UpdateAsync(string, string, string, IEnumerable<UpdateMask>, RequestOptions)
  nameWithType: CorporaDocumentChunkService.UpdateAsync(string, string, string, IEnumerable<UpdateMask>, RequestOptions)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync(string, string, string, System.Collections.Generic.IEnumerable<UpdateMask>, RequestOptions)
  type: Method
  source:
    id: UpdateAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 70
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<Chunk> UpdateAsync(string corpusId, string documentId, string chunkId, IEnumerable<UpdateMask> updateMasks, RequestOptions options = null)
    parameters:
    - id: corpusId
      type: System.String
    - id: documentId
      type: System.String
    - id: chunkId
      type: System.String
    - id: updateMasks
      type: System.Collections.Generic.IEnumerable{UpdateMask}
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.Google.Chunk}
    content.vb: Public Function UpdateAsync(corpusId As String, documentId As String, chunkId As String, updateMasks As IEnumerable(Of UpdateMask), options As RequestOptions = Nothing) As UniTask(Of Chunk)
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync*
  nameWithType.vb: CorporaDocumentChunkService.UpdateAsync(String, String, String, IEnumerable(Of UpdateMask), RequestOptions)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync(String, String, String, System.Collections.Generic.IEnumerable(Of UpdateMask), RequestOptions)
  name.vb: UpdateAsync(String, String, String, IEnumerable(Of UpdateMask), RequestOptions)
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.CreateChunkRequest},System.String,System.String)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.CreateChunkRequest},System.String,System.String)
  id: CreateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.CreateChunkRequest},System.String,System.String)
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: CreateBatchAsync(ChunkBatchRequest<CreateChunkRequest>, string, string)
  nameWithType: CorporaDocumentChunkService.CreateBatchAsync(ChunkBatchRequest<CreateChunkRequest>, string, string)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest<Glitch9.AIDevKit.Google.CreateChunkRequest>, string, string)
  type: Method
  source:
    id: CreateBatchAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 72
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<QueryResponse<Chunk>> CreateBatchAsync(ChunkBatchRequest<CreateChunkRequest> req, string corpusId, string documentId)
    parameters:
    - id: req
      type: Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.CreateChunkRequest}
    - id: corpusId
      type: System.String
    - id: documentId
      type: System.String
    return:
      type: UniTask{QueryResponse{Glitch9.AIDevKit.Google.Chunk}}
    content.vb: Public Function CreateBatchAsync(req As ChunkBatchRequest(Of CreateChunkRequest), corpusId As String, documentId As String) As UniTask(Of QueryResponse(Of Chunk))
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync*
  nameWithType.vb: CorporaDocumentChunkService.CreateBatchAsync(ChunkBatchRequest(Of CreateChunkRequest), String, String)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest(Of Glitch9.AIDevKit.Google.CreateChunkRequest), String, String)
  name.vb: CreateBatchAsync(ChunkBatchRequest(Of CreateChunkRequest), String, String)
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.DeleteChunkRequest},System.String,System.String)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.DeleteChunkRequest},System.String,System.String)
  id: DeleteBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.DeleteChunkRequest},System.String,System.String)
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: DeleteBatchAsync(ChunkBatchRequest<DeleteChunkRequest>, string, string)
  nameWithType: CorporaDocumentChunkService.DeleteBatchAsync(ChunkBatchRequest<DeleteChunkRequest>, string, string)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest<Glitch9.AIDevKit.Google.DeleteChunkRequest>, string, string)
  type: Method
  source:
    id: DeleteBatchAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 79
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<bool> DeleteBatchAsync(ChunkBatchRequest<DeleteChunkRequest> req, string corpusId, string documentId)
    parameters:
    - id: req
      type: Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.DeleteChunkRequest}
    - id: corpusId
      type: System.String
    - id: documentId
      type: System.String
    return:
      type: UniTask{System.Boolean}
    content.vb: Public Function DeleteBatchAsync(req As ChunkBatchRequest(Of DeleteChunkRequest), corpusId As String, documentId As String) As UniTask(Of Boolean)
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync*
  nameWithType.vb: CorporaDocumentChunkService.DeleteBatchAsync(ChunkBatchRequest(Of DeleteChunkRequest), String, String)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest(Of Glitch9.AIDevKit.Google.DeleteChunkRequest), String, String)
  name.vb: DeleteBatchAsync(ChunkBatchRequest(Of DeleteChunkRequest), String, String)
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.UpdateChunkRequest},System.String,System.String)
  commentId: M:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.UpdateChunkRequest},System.String,System.String)
  id: UpdateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.UpdateChunkRequest},System.String,System.String)
  parent: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService
  langs:
  - csharp
  - vb
  name: UpdateBatchAsync(ChunkBatchRequest<UpdateChunkRequest>, string, string)
  nameWithType: CorporaDocumentChunkService.UpdateBatchAsync(ChunkBatchRequest<UpdateChunkRequest>, string, string)
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest<Glitch9.AIDevKit.Google.UpdateChunkRequest>, string, string)
  type: Method
  source:
    id: UpdateBatchAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Services/CorporaService.cs
    startLine: 88
  namespace: Glitch9.AIDevKit.Google.Services
  syntax:
    content: public UniTask<QueryResponse<Chunk>> UpdateBatchAsync(ChunkBatchRequest<UpdateChunkRequest> req, string corpusId, string documentId)
    parameters:
    - id: req
      type: Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.UpdateChunkRequest}
    - id: corpusId
      type: System.String
    - id: documentId
      type: System.String
    return:
      type: UniTask{QueryResponse{Glitch9.AIDevKit.Google.Chunk}}
    content.vb: Public Function UpdateBatchAsync(req As ChunkBatchRequest(Of UpdateChunkRequest), corpusId As String, documentId As String) As UniTask(Of QueryResponse(Of Chunk))
  overload: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync*
  nameWithType.vb: CorporaDocumentChunkService.UpdateBatchAsync(ChunkBatchRequest(Of UpdateChunkRequest), String, String)
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync(Glitch9.AIDevKit.Google.ChunkBatchRequest(Of Glitch9.AIDevKit.Google.UpdateChunkRequest), String, String)
  name.vb: UpdateBatchAsync(ChunkBatchRequest(Of UpdateChunkRequest), String, String)
references:
- uid: Glitch9.AIDevKit.Google.Services
  commentId: N:Glitch9.AIDevKit.Google.Services
  href: Glitch9.html
  name: Glitch9.AIDevKit.Google.Services
  nameWithType: Glitch9.AIDevKit.Google.Services
  fullName: Glitch9.AIDevKit.Google.Services
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
  - name: .
  - uid: Glitch9.AIDevKit.Google.Services
    name: Services
    href: Glitch9.AIDevKit.Google.Services.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
  - name: .
  - uid: Glitch9.AIDevKit.Google.Services
    name: Services
    href: Glitch9.AIDevKit.Google.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.#ctor*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.#ctor
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService__ctor_Glitch9_AIDevKit_Google_GenerativeAI_
  name: CorporaDocumentChunkService
  nameWithType: CorporaDocumentChunkService.CorporaDocumentChunkService
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CorporaDocumentChunkService
  nameWithType.vb: CorporaDocumentChunkService.New
  fullName.vb: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.New
  name.vb: New
- uid: Glitch9.AIDevKit.Google.GenerativeAI
  commentId: T:Glitch9.AIDevKit.Google.GenerativeAI
  parent: Glitch9.AIDevKit.Google
  href: Glitch9.AIDevKit.Google.GenerativeAI.html
  name: GenerativeAI
  nameWithType: GenerativeAI
  fullName: Glitch9.AIDevKit.Google.GenerativeAI
- uid: Glitch9.AIDevKit.Google
  commentId: N:Glitch9.AIDevKit.Google
  href: Glitch9.html
  name: Glitch9.AIDevKit.Google
  nameWithType: Glitch9.AIDevKit.Google
  fullName: Glitch9.AIDevKit.Google
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService_CreateAsync_Glitch9_AIDevKit_Google_Chunk_
  name: CreateAsync
  nameWithType: CorporaDocumentChunkService.CreateAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateAsync
- uid: Glitch9.AIDevKit.Google.Chunk
  commentId: T:Glitch9.AIDevKit.Google.Chunk
  parent: Glitch9.AIDevKit.Google
  href: Glitch9.AIDevKit.Google.Chunk.html
  name: Chunk
  nameWithType: Chunk
  fullName: Glitch9.AIDevKit.Google.Chunk
- uid: UniTask{Glitch9.AIDevKit.Google.Chunk}
  commentId: '!:UniTask{Glitch9.AIDevKit.Google.Chunk}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.Google.Chunk.html
  name: UniTask<Chunk>
  nameWithType: UniTask<Chunk>
  fullName: UniTask<Glitch9.AIDevKit.Google.Chunk>
  nameWithType.vb: UniTask(Of Chunk)
  fullName.vb: UniTask(Of Glitch9.AIDevKit.Google.Chunk)
  name.vb: UniTask(Of Chunk)
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.Google.Chunk
    name: Chunk
    href: Glitch9.AIDevKit.Google.Chunk.html
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Google.Chunk
    name: Chunk
    href: Glitch9.AIDevKit.Google.Chunk.html
  - name: )
- uid: UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService_DeleteAsync_System_String_System_String_System_String_RequestOptions_
  name: DeleteAsync
  nameWithType: CorporaDocumentChunkService.DeleteAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RequestOptions
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: RequestOptions
- uid: UniTask{System.Boolean}
  commentId: '!:UniTask{System.Boolean}'
  definition: UniTask`1
  name: UniTask<bool>
  nameWithType: UniTask<bool>
  fullName: UniTask<bool>
  nameWithType.vb: UniTask(Of Boolean)
  fullName.vb: UniTask(Of Boolean)
  name.vb: UniTask(Of Boolean)
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService_RetrieveAsync_System_String_System_String_System_String_RequestOptions_
  name: RetrieveAsync
  nameWithType: CorporaDocumentChunkService.RetrieveAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.RetrieveAsync
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService_ListAsync_System_String_System_String_TokenQuery_RequestOptions_
  name: ListAsync
  nameWithType: CorporaDocumentChunkService.ListAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.ListAsync
- uid: TokenQuery
  isExternal: true
  name: TokenQuery
  nameWithType: TokenQuery
  fullName: TokenQuery
- uid: UniTask{QueryResponse{Glitch9.AIDevKit.Google.Chunk}}
  commentId: '!:UniTask{QueryResponse{Glitch9.AIDevKit.Google.Chunk}}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.Google.Chunk.html
  name: UniTask<QueryResponse<Chunk>>
  nameWithType: UniTask<QueryResponse<Chunk>>
  fullName: UniTask<QueryResponse<Glitch9.AIDevKit.Google.Chunk>>
  nameWithType.vb: UniTask(Of QueryResponse(Of Chunk))
  fullName.vb: UniTask(Of QueryResponse(Of Glitch9.AIDevKit.Google.Chunk))
  name.vb: UniTask(Of QueryResponse(Of Chunk))
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: QueryResponse`1
    name: QueryResponse
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.Google.Chunk
    name: Chunk
    href: Glitch9.AIDevKit.Google.Chunk.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: QueryResponse`1
    name: QueryResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Google.Chunk
    name: Chunk
    href: Glitch9.AIDevKit.Google.Chunk.html
  - name: )
  - name: )
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService_UpdateAsync_System_String_System_String_System_String_System_Collections_Generic_IEnumerable_UpdateMask__RequestOptions_
  name: UpdateAsync
  nameWithType: CorporaDocumentChunkService.UpdateAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateAsync
- uid: System.Collections.Generic.IEnumerable{UpdateMask}
  commentId: T:System.Collections.Generic.IEnumerable{UpdateMask}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UpdateMask>
  nameWithType: IEnumerable<UpdateMask>
  fullName: System.Collections.Generic.IEnumerable<UpdateMask>
  nameWithType.vb: IEnumerable(Of UpdateMask)
  fullName.vb: System.Collections.Generic.IEnumerable(Of UpdateMask)
  name.vb: IEnumerable(Of UpdateMask)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: UpdateMask
    name: UpdateMask
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UpdateMask
    name: UpdateMask
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService_CreateBatchAsync_Glitch9_AIDevKit_Google_ChunkBatchRequest_Glitch9_AIDevKit_Google_CreateChunkRequest__System_String_System_String_
  name: CreateBatchAsync
  nameWithType: CorporaDocumentChunkService.CreateBatchAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.CreateBatchAsync
- uid: Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.CreateChunkRequest}
  commentId: T:Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.CreateChunkRequest}
  parent: Glitch9.AIDevKit.Google
  definition: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
  href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  name: ChunkBatchRequest<CreateChunkRequest>
  nameWithType: ChunkBatchRequest<CreateChunkRequest>
  fullName: Glitch9.AIDevKit.Google.ChunkBatchRequest<Glitch9.AIDevKit.Google.CreateChunkRequest>
  nameWithType.vb: ChunkBatchRequest(Of CreateChunkRequest)
  fullName.vb: Glitch9.AIDevKit.Google.ChunkBatchRequest(Of Glitch9.AIDevKit.Google.CreateChunkRequest)
  name.vb: ChunkBatchRequest(Of CreateChunkRequest)
  spec.csharp:
  - uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
    name: ChunkBatchRequest
    href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  - name: <
  - uid: Glitch9.AIDevKit.Google.CreateChunkRequest
    name: CreateChunkRequest
    href: Glitch9.AIDevKit.Google.CreateChunkRequest.html
  - name: '>'
  spec.vb:
  - uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
    name: ChunkBatchRequest
    href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Google.CreateChunkRequest
    name: CreateChunkRequest
    href: Glitch9.AIDevKit.Google.CreateChunkRequest.html
  - name: )
- uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
  commentId: T:Glitch9.AIDevKit.Google.ChunkBatchRequest`1
  href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  name: ChunkBatchRequest<T>
  nameWithType: ChunkBatchRequest<T>
  fullName: Glitch9.AIDevKit.Google.ChunkBatchRequest<T>
  nameWithType.vb: ChunkBatchRequest(Of T)
  fullName.vb: Glitch9.AIDevKit.Google.ChunkBatchRequest(Of T)
  name.vb: ChunkBatchRequest(Of T)
  spec.csharp:
  - uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
    name: ChunkBatchRequest
    href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
    name: ChunkBatchRequest
    href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService_DeleteBatchAsync_Glitch9_AIDevKit_Google_ChunkBatchRequest_Glitch9_AIDevKit_Google_DeleteChunkRequest__System_String_System_String_
  name: DeleteBatchAsync
  nameWithType: CorporaDocumentChunkService.DeleteBatchAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.DeleteBatchAsync
- uid: Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.DeleteChunkRequest}
  commentId: T:Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.DeleteChunkRequest}
  parent: Glitch9.AIDevKit.Google
  definition: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
  href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  name: ChunkBatchRequest<DeleteChunkRequest>
  nameWithType: ChunkBatchRequest<DeleteChunkRequest>
  fullName: Glitch9.AIDevKit.Google.ChunkBatchRequest<Glitch9.AIDevKit.Google.DeleteChunkRequest>
  nameWithType.vb: ChunkBatchRequest(Of DeleteChunkRequest)
  fullName.vb: Glitch9.AIDevKit.Google.ChunkBatchRequest(Of Glitch9.AIDevKit.Google.DeleteChunkRequest)
  name.vb: ChunkBatchRequest(Of DeleteChunkRequest)
  spec.csharp:
  - uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
    name: ChunkBatchRequest
    href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  - name: <
  - uid: Glitch9.AIDevKit.Google.DeleteChunkRequest
    name: DeleteChunkRequest
    href: Glitch9.AIDevKit.Google.DeleteChunkRequest.html
  - name: '>'
  spec.vb:
  - uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
    name: ChunkBatchRequest
    href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Google.DeleteChunkRequest
    name: DeleteChunkRequest
    href: Glitch9.AIDevKit.Google.DeleteChunkRequest.html
  - name: )
- uid: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync*
  commentId: Overload:Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync
  href: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.html#Glitch9_AIDevKit_Google_Services_CorporaDocumentChunkService_UpdateBatchAsync_Glitch9_AIDevKit_Google_ChunkBatchRequest_Glitch9_AIDevKit_Google_UpdateChunkRequest__System_String_System_String_
  name: UpdateBatchAsync
  nameWithType: CorporaDocumentChunkService.UpdateBatchAsync
  fullName: Glitch9.AIDevKit.Google.Services.CorporaDocumentChunkService.UpdateBatchAsync
- uid: Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.UpdateChunkRequest}
  commentId: T:Glitch9.AIDevKit.Google.ChunkBatchRequest{Glitch9.AIDevKit.Google.UpdateChunkRequest}
  parent: Glitch9.AIDevKit.Google
  definition: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
  href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  name: ChunkBatchRequest<UpdateChunkRequest>
  nameWithType: ChunkBatchRequest<UpdateChunkRequest>
  fullName: Glitch9.AIDevKit.Google.ChunkBatchRequest<Glitch9.AIDevKit.Google.UpdateChunkRequest>
  nameWithType.vb: ChunkBatchRequest(Of UpdateChunkRequest)
  fullName.vb: Glitch9.AIDevKit.Google.ChunkBatchRequest(Of Glitch9.AIDevKit.Google.UpdateChunkRequest)
  name.vb: ChunkBatchRequest(Of UpdateChunkRequest)
  spec.csharp:
  - uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
    name: ChunkBatchRequest
    href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  - name: <
  - uid: Glitch9.AIDevKit.Google.UpdateChunkRequest
    name: UpdateChunkRequest
    href: Glitch9.AIDevKit.Google.UpdateChunkRequest.html
  - name: '>'
  spec.vb:
  - uid: Glitch9.AIDevKit.Google.ChunkBatchRequest`1
    name: ChunkBatchRequest
    href: Glitch9.AIDevKit.Google.ChunkBatchRequest-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.Google.UpdateChunkRequest
    name: UpdateChunkRequest
    href: Glitch9.AIDevKit.Google.UpdateChunkRequest.html
  - name: )
