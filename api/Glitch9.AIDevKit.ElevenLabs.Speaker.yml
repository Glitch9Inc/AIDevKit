### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.ElevenLabs.Speaker
  commentId: T:Glitch9.AIDevKit.ElevenLabs.Speaker
  id: Speaker
  parent: Glitch9.AIDevKit.ElevenLabs
  children:
  - Glitch9.AIDevKit.ElevenLabs.Speaker.DurationSecs
  - Glitch9.AIDevKit.ElevenLabs.Speaker.SpeakerId
  - Glitch9.AIDevKit.ElevenLabs.Speaker.Utterances
  langs:
  - csharp
  - vb
  name: Speaker
  nameWithType: Speaker
  fullName: Glitch9.AIDevKit.ElevenLabs.Speaker
  type: Class
  source:
    id: Speaker
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 94
  namespace: Glitch9.AIDevKit.ElevenLabs
  syntax:
    content: public class Speaker
    content.vb: Public Class Speaker
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.ElevenLabs.Speaker.SpeakerId
  commentId: P:Glitch9.AIDevKit.ElevenLabs.Speaker.SpeakerId
  id: SpeakerId
  parent: Glitch9.AIDevKit.ElevenLabs.Speaker
  langs:
  - csharp
  - vb
  name: SpeakerId
  nameWithType: Speaker.SpeakerId
  fullName: Glitch9.AIDevKit.ElevenLabs.Speaker.SpeakerId
  type: Property
  source:
    id: SpeakerId
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 99
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Required. The ID of the speaker.
  example: []
  syntax:
    content: public string SpeakerId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SpeakerId As String
  overload: Glitch9.AIDevKit.ElevenLabs.Speaker.SpeakerId*
- uid: Glitch9.AIDevKit.ElevenLabs.Speaker.DurationSecs
  commentId: P:Glitch9.AIDevKit.ElevenLabs.Speaker.DurationSecs
  id: DurationSecs
  parent: Glitch9.AIDevKit.ElevenLabs.Speaker
  langs:
  - csharp
  - vb
  name: DurationSecs
  nameWithType: Speaker.DurationSecs
  fullName: Glitch9.AIDevKit.ElevenLabs.Speaker.DurationSecs
  type: Property
  source:
    id: DurationSecs
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 104
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Required. The duration of the speaker in seconds.
  example: []
  syntax:
    content: public double? DurationSecs { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property DurationSecs As Double?
  overload: Glitch9.AIDevKit.ElevenLabs.Speaker.DurationSecs*
- uid: Glitch9.AIDevKit.ElevenLabs.Speaker.Utterances
  commentId: P:Glitch9.AIDevKit.ElevenLabs.Speaker.Utterances
  id: Utterances
  parent: Glitch9.AIDevKit.ElevenLabs.Speaker
  langs:
  - csharp
  - vb
  name: Utterances
  nameWithType: Speaker.Utterances
  fullName: Glitch9.AIDevKit.ElevenLabs.Speaker.Utterances
  type: Property
  source:
    id: Utterances
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 109
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Optional. The utterances of the speaker.
  example: []
  syntax:
    content: public List<Utterances> Utterances { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Glitch9.AIDevKit.ElevenLabs.Utterances}
    content.vb: Public Property Utterances As List(Of Utterances)
  overload: Glitch9.AIDevKit.ElevenLabs.Speaker.Utterances*
references:
- uid: Glitch9.AIDevKit.ElevenLabs
  commentId: N:Glitch9.AIDevKit.ElevenLabs
  href: Glitch9.html
  name: Glitch9.AIDevKit.ElevenLabs
  nameWithType: Glitch9.AIDevKit.ElevenLabs
  fullName: Glitch9.AIDevKit.ElevenLabs
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.ElevenLabs
    name: ElevenLabs
    href: Glitch9.AIDevKit.ElevenLabs.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.ElevenLabs
    name: ElevenLabs
    href: Glitch9.AIDevKit.ElevenLabs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.ElevenLabs.Speaker.SpeakerId*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.Speaker.SpeakerId
  href: Glitch9.AIDevKit.ElevenLabs.Speaker.html#Glitch9_AIDevKit_ElevenLabs_Speaker_SpeakerId
  name: SpeakerId
  nameWithType: Speaker.SpeakerId
  fullName: Glitch9.AIDevKit.ElevenLabs.Speaker.SpeakerId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Glitch9.AIDevKit.ElevenLabs.Speaker.DurationSecs*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.Speaker.DurationSecs
  href: Glitch9.AIDevKit.ElevenLabs.Speaker.html#Glitch9_AIDevKit_ElevenLabs_Speaker_DurationSecs
  name: DurationSecs
  nameWithType: Speaker.DurationSecs
  fullName: Glitch9.AIDevKit.ElevenLabs.Speaker.DurationSecs
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: double?
  nameWithType: double?
  fullName: double?
  nameWithType.vb: Double?
  fullName.vb: Double?
  name.vb: Double?
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Glitch9.AIDevKit.ElevenLabs.Speaker.Utterances*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.Speaker.Utterances
  href: Glitch9.AIDevKit.ElevenLabs.Speaker.html#Glitch9_AIDevKit_ElevenLabs_Speaker_Utterances
  name: Utterances
  nameWithType: Speaker.Utterances
  fullName: Glitch9.AIDevKit.ElevenLabs.Speaker.Utterances
- uid: System.Collections.Generic.List{Glitch9.AIDevKit.ElevenLabs.Utterances}
  commentId: T:System.Collections.Generic.List{Glitch9.AIDevKit.ElevenLabs.Utterances}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: Glitch9.AIDevKit.ElevenLabs.Utterances.html
  name: List<Utterances>
  nameWithType: List<Utterances>
  fullName: System.Collections.Generic.List<Glitch9.AIDevKit.ElevenLabs.Utterances>
  nameWithType.vb: List(Of Utterances)
  fullName.vb: System.Collections.Generic.List(Of Glitch9.AIDevKit.ElevenLabs.Utterances)
  name.vb: List(Of Utterances)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.ElevenLabs.Utterances
    name: Utterances
    href: Glitch9.AIDevKit.ElevenLabs.Utterances.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.ElevenLabs.Utterances
    name: Utterances
    href: Glitch9.AIDevKit.ElevenLabs.Utterances.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
