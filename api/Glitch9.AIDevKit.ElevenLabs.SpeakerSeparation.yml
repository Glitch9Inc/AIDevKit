### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  commentId: T:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  id: SpeakerSeparation
  parent: Glitch9.AIDevKit.ElevenLabs
  children:
  - Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SampleId
  - Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SelectedSpeakerIds
  - Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SpeakerId
  - Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Speakers
  - Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Status
  - Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.VoiceId
  langs:
  - csharp
  - vb
  name: SpeakerSeparation
  nameWithType: SpeakerSeparation
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  type: Class
  source:
    id: SpeakerSeparation
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 61
  namespace: Glitch9.AIDevKit.ElevenLabs
  syntax:
    content: public class SpeakerSeparation
    content.vb: Public Class SpeakerSeparation
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.VoiceId
  commentId: P:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.VoiceId
  id: VoiceId
  parent: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  langs:
  - csharp
  - vb
  name: VoiceId
  nameWithType: SpeakerSeparation.VoiceId
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.VoiceId
  type: Property
  source:
    id: VoiceId
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 66
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Required. The ID of the voice.
  example: []
  syntax:
    content: public string VoiceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VoiceId As String
  overload: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.VoiceId*
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SampleId
  commentId: P:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SampleId
  id: SampleId
  parent: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  langs:
  - csharp
  - vb
  name: SampleId
  nameWithType: SpeakerSeparation.SampleId
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SampleId
  type: Property
  source:
    id: SampleId
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 71
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Required. The ID of the sample.
  example: []
  syntax:
    content: public string SampleId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SampleId As String
  overload: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SampleId*
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Status
  commentId: P:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Status
  id: Status
  parent: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: SpeakerSeparation.Status
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Status
  type: Property
  source:
    id: Status
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 76
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Required. The status of the speaker separation.
  example: []
  syntax:
    content: public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Status As String
  overload: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Status*
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SelectedSpeakerIds
  commentId: P:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SelectedSpeakerIds
  id: SelectedSpeakerIds
  parent: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  langs:
  - csharp
  - vb
  name: SelectedSpeakerIds
  nameWithType: SpeakerSeparation.SelectedSpeakerIds
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SelectedSpeakerIds
  type: Property
  source:
    id: SelectedSpeakerIds
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 81
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Optional. The selected speaker IDs.
  example: []
  syntax:
    content: public List<string> SelectedSpeakerIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property SelectedSpeakerIds As List(Of String)
  overload: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SelectedSpeakerIds*
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Speakers
  commentId: P:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Speakers
  id: Speakers
  parent: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  langs:
  - csharp
  - vb
  name: Speakers
  nameWithType: SpeakerSeparation.Speakers
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Speakers
  type: Property
  source:
    id: Speakers
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 86
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Optional. The speakers information.
  example: []
  syntax:
    content: public Dictionary<string, Speaker> Speakers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Glitch9.AIDevKit.ElevenLabs.Speaker}
    content.vb: Public Property Speakers As Dictionary(Of String, Speaker)
  overload: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Speakers*
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SpeakerId
  commentId: P:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SpeakerId
  id: SpeakerId
  parent: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation
  langs:
  - csharp
  - vb
  name: SpeakerId
  nameWithType: SpeakerSeparation.SpeakerId
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SpeakerId
  type: Property
  source:
    id: SpeakerId
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/ElevenLabs/Models/Voice/Submodels/VoiceSample.cs
    startLine: 91
  namespace: Glitch9.AIDevKit.ElevenLabs
  summary: Optional. The ID of the speaker.
  example: []
  syntax:
    content: public string SpeakerId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SpeakerId As String
  overload: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SpeakerId*
references:
- uid: Glitch9.AIDevKit.ElevenLabs
  commentId: N:Glitch9.AIDevKit.ElevenLabs
  href: Glitch9.html
  name: Glitch9.AIDevKit.ElevenLabs
  nameWithType: Glitch9.AIDevKit.ElevenLabs
  fullName: Glitch9.AIDevKit.ElevenLabs
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.ElevenLabs
    name: ElevenLabs
    href: Glitch9.AIDevKit.ElevenLabs.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.ElevenLabs
    name: ElevenLabs
    href: Glitch9.AIDevKit.ElevenLabs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.VoiceId*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.VoiceId
  href: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.html#Glitch9_AIDevKit_ElevenLabs_SpeakerSeparation_VoiceId
  name: VoiceId
  nameWithType: SpeakerSeparation.VoiceId
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.VoiceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SampleId*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SampleId
  href: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.html#Glitch9_AIDevKit_ElevenLabs_SpeakerSeparation_SampleId
  name: SampleId
  nameWithType: SpeakerSeparation.SampleId
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SampleId
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Status*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Status
  href: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.html#Glitch9_AIDevKit_ElevenLabs_SpeakerSeparation_Status
  name: Status
  nameWithType: SpeakerSeparation.Status
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Status
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SelectedSpeakerIds*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SelectedSpeakerIds
  href: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.html#Glitch9_AIDevKit_ElevenLabs_SpeakerSeparation_SelectedSpeakerIds
  name: SelectedSpeakerIds
  nameWithType: SpeakerSeparation.SelectedSpeakerIds
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SelectedSpeakerIds
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Speakers*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Speakers
  href: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.html#Glitch9_AIDevKit_ElevenLabs_SpeakerSeparation_Speakers
  name: Speakers
  nameWithType: SpeakerSeparation.Speakers
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.Speakers
- uid: System.Collections.Generic.Dictionary{System.String,Glitch9.AIDevKit.ElevenLabs.Speaker}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Glitch9.AIDevKit.ElevenLabs.Speaker}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: Glitch9.AIDevKit.ElevenLabs.Speaker.html
  name: Dictionary<string, Speaker>
  nameWithType: Dictionary<string, Speaker>
  fullName: System.Collections.Generic.Dictionary<string, Glitch9.AIDevKit.ElevenLabs.Speaker>
  nameWithType.vb: Dictionary(Of String, Speaker)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Glitch9.AIDevKit.ElevenLabs.Speaker)
  name.vb: Dictionary(Of String, Speaker)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.ElevenLabs.Speaker
    name: Speaker
    href: Glitch9.AIDevKit.ElevenLabs.Speaker.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Glitch9.AIDevKit.ElevenLabs.Speaker
    name: Speaker
    href: Glitch9.AIDevKit.ElevenLabs.Speaker.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SpeakerId*
  commentId: Overload:Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SpeakerId
  href: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.html#Glitch9_AIDevKit_ElevenLabs_SpeakerSeparation_SpeakerId
  name: SpeakerId
  nameWithType: SpeakerSeparation.SpeakerId
  fullName: Glitch9.AIDevKit.ElevenLabs.SpeakerSeparation.SpeakerId
