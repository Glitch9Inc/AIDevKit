### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  commentId: T:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  id: AdministrationService.ProjectService
  parent: Glitch9.AIDevKit.OpenAI.Administration
  children:
  - Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI)
  - Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync(System.String,RequestOptions)
  - Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync(System.String,RequestOptions)
  - Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ListAsync(CursorQuery,RequestOptions)
  - Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync(System.String,System.String,RequestOptions)
  - Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync(System.String,RequestOptions)
  langs:
  - csharp
  - vb
  name: AdministrationService.ProjectService
  nameWithType: AdministrationService.ProjectService
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  type: Class
  source:
    id: ProjectService
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Administration/ProjectService.cs
    startLine: 9
  namespace: Glitch9.AIDevKit.OpenAI.Administration
  syntax:
    content: 'public class AdministrationService.ProjectService : CRUDServiceBase<OpenAI>'
    content.vb: Public Class AdministrationService.ProjectService Inherits CRUDServiceBase(Of OpenAI)
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI)
  commentId: M:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.#ctor(Glitch9.AIDevKit.OpenAI.OpenAI)
  id: '#ctor(Glitch9.AIDevKit.OpenAI.OpenAI)'
  parent: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  langs:
  - csharp
  - vb
  name: ProjectService(OpenAI)
  nameWithType: AdministrationService.ProjectService.ProjectService(OpenAI)
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ProjectService(Glitch9.AIDevKit.OpenAI.OpenAI)
  type: Constructor
  source:
    id: .ctor
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Administration/ProjectService.cs
    startLine: 14
  namespace: Glitch9.AIDevKit.OpenAI.Administration
  syntax:
    content: public ProjectService(OpenAI client)
    parameters:
    - id: client
      type: Glitch9.AIDevKit.OpenAI.OpenAI
    content.vb: Public Sub New(client As OpenAI)
  overload: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.#ctor*
  nameWithType.vb: AdministrationService.ProjectService.New(OpenAI)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.New(Glitch9.AIDevKit.OpenAI.OpenAI)
  name.vb: New(OpenAI)
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync(System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync(System.String,RequestOptions)
  id: CreateAsync(System.String,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  langs:
  - csharp
  - vb
  name: CreateAsync(string, RequestOptions)
  nameWithType: AdministrationService.ProjectService.CreateAsync(string, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync(string, RequestOptions)
  type: Method
  source:
    id: CreateAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Administration/ProjectService.cs
    startLine: 16
  namespace: Glitch9.AIDevKit.OpenAI.Administration
  syntax:
    content: public UniTask<Project> CreateAsync(string projectName, RequestOptions options = null)
    parameters:
    - id: projectName
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.Administration.Project}
    content.vb: Public Function CreateAsync(projectName As String, options As RequestOptions = Nothing) As UniTask(Of Project)
  overload: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync*
  nameWithType.vb: AdministrationService.ProjectService.CreateAsync(String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync(String, RequestOptions)
  name.vb: CreateAsync(String, RequestOptions)
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync(System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync(System.String,RequestOptions)
  id: RetrieveAsync(System.String,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  langs:
  - csharp
  - vb
  name: RetrieveAsync(string, RequestOptions)
  nameWithType: AdministrationService.ProjectService.RetrieveAsync(string, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync(string, RequestOptions)
  type: Method
  source:
    id: RetrieveAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Administration/ProjectService.cs
    startLine: 23
  namespace: Glitch9.AIDevKit.OpenAI.Administration
  syntax:
    content: public UniTask<Project> RetrieveAsync(string projectId, RequestOptions options = null)
    parameters:
    - id: projectId
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.Administration.Project}
    content.vb: Public Function RetrieveAsync(projectId As String, options As RequestOptions = Nothing) As UniTask(Of Project)
  overload: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync*
  nameWithType.vb: AdministrationService.ProjectService.RetrieveAsync(String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync(String, RequestOptions)
  name.vb: RetrieveAsync(String, RequestOptions)
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync(System.String,System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync(System.String,System.String,RequestOptions)
  id: ModifyAsync(System.String,System.String,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  langs:
  - csharp
  - vb
  name: ModifyAsync(string, string, RequestOptions)
  nameWithType: AdministrationService.ProjectService.ModifyAsync(string, string, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync(string, string, RequestOptions)
  type: Method
  source:
    id: ModifyAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Administration/ProjectService.cs
    startLine: 29
  namespace: Glitch9.AIDevKit.OpenAI.Administration
  syntax:
    content: public UniTask<Project> ModifyAsync(string projectId, string projectName, RequestOptions options = null)
    parameters:
    - id: projectId
      type: System.String
    - id: projectName
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.Administration.Project}
    content.vb: Public Function ModifyAsync(projectId As String, projectName As String, options As RequestOptions = Nothing) As UniTask(Of Project)
  overload: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync*
  nameWithType.vb: AdministrationService.ProjectService.ModifyAsync(String, String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync(String, String, RequestOptions)
  name.vb: ModifyAsync(String, String, RequestOptions)
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync(System.String,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync(System.String,RequestOptions)
  id: ArchiveAsync(System.String,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  langs:
  - csharp
  - vb
  name: ArchiveAsync(string, RequestOptions)
  nameWithType: AdministrationService.ProjectService.ArchiveAsync(string, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync(string, RequestOptions)
  type: Method
  source:
    id: ArchiveAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Administration/ProjectService.cs
    startLine: 36
  namespace: Glitch9.AIDevKit.OpenAI.Administration
  syntax:
    content: public UniTask<Project> ArchiveAsync(string projectId, RequestOptions options = null)
    parameters:
    - id: projectId
      type: System.String
    - id: options
      type: RequestOptions
    return:
      type: UniTask{Glitch9.AIDevKit.OpenAI.Administration.Project}
    content.vb: Public Function ArchiveAsync(projectId As String, options As RequestOptions = Nothing) As UniTask(Of Project)
  overload: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync*
  nameWithType.vb: AdministrationService.ProjectService.ArchiveAsync(String, RequestOptions)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync(String, RequestOptions)
  name.vb: ArchiveAsync(String, RequestOptions)
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ListAsync(CursorQuery,RequestOptions)
  commentId: M:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ListAsync(CursorQuery,RequestOptions)
  id: ListAsync(CursorQuery,RequestOptions)
  parent: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService
  langs:
  - csharp
  - vb
  name: ListAsync(CursorQuery, RequestOptions)
  nameWithType: AdministrationService.ProjectService.ListAsync(CursorQuery, RequestOptions)
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ListAsync(CursorQuery, RequestOptions)
  type: Method
  source:
    id: ListAsync
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Services/Administration/ProjectService.cs
    startLine: 42
  namespace: Glitch9.AIDevKit.OpenAI.Administration
  syntax:
    content: public UniTask<QueryResponse<Project>> ListAsync(CursorQuery query = null, RequestOptions options = null)
    parameters:
    - id: query
      type: CursorQuery
    - id: options
      type: RequestOptions
    return:
      type: UniTask{QueryResponse{Glitch9.AIDevKit.OpenAI.Administration.Project}}
    content.vb: Public Function ListAsync(query As CursorQuery = Nothing, options As RequestOptions = Nothing) As UniTask(Of QueryResponse(Of Project))
  overload: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ListAsync*
references:
- uid: Glitch9.AIDevKit.OpenAI.Administration
  commentId: N:Glitch9.AIDevKit.OpenAI.Administration
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI.Administration
  nameWithType: Glitch9.AIDevKit.OpenAI.Administration
  fullName: Glitch9.AIDevKit.OpenAI.Administration
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Administration
    name: Administration
    href: Glitch9.AIDevKit.OpenAI.Administration.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Administration
    name: Administration
    href: Glitch9.AIDevKit.OpenAI.Administration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.#ctor*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.#ctor
  href: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.html#Glitch9_AIDevKit_OpenAI_Administration_AdministrationService_ProjectService__ctor_Glitch9_AIDevKit_OpenAI_OpenAI_
  name: ProjectService
  nameWithType: AdministrationService.ProjectService.ProjectService
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ProjectService
  nameWithType.vb: AdministrationService.ProjectService.New
  fullName.vb: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.New
  name.vb: New
- uid: Glitch9.AIDevKit.OpenAI.OpenAI
  commentId: T:Glitch9.AIDevKit.OpenAI.OpenAI
  parent: Glitch9.AIDevKit.OpenAI
  href: Glitch9.AIDevKit.OpenAI.OpenAI.html
  name: OpenAI
  nameWithType: OpenAI
  fullName: Glitch9.AIDevKit.OpenAI.OpenAI
- uid: Glitch9.AIDevKit.OpenAI
  commentId: N:Glitch9.AIDevKit.OpenAI
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI
  nameWithType: Glitch9.AIDevKit.OpenAI
  fullName: Glitch9.AIDevKit.OpenAI
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync
  href: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.html#Glitch9_AIDevKit_OpenAI_Administration_AdministrationService_ProjectService_CreateAsync_System_String_RequestOptions_
  name: CreateAsync
  nameWithType: AdministrationService.ProjectService.CreateAsync
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.CreateAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: RequestOptions
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: RequestOptions
- uid: UniTask{Glitch9.AIDevKit.OpenAI.Administration.Project}
  commentId: '!:UniTask{Glitch9.AIDevKit.OpenAI.Administration.Project}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.OpenAI.Administration.Project.html
  name: UniTask<Project>
  nameWithType: UniTask<Project>
  fullName: UniTask<Glitch9.AIDevKit.OpenAI.Administration.Project>
  nameWithType.vb: UniTask(Of Project)
  fullName.vb: UniTask(Of Glitch9.AIDevKit.OpenAI.Administration.Project)
  name.vb: UniTask(Of Project)
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.OpenAI.Administration.Project
    name: Project
    href: Glitch9.AIDevKit.OpenAI.Administration.Project.html
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.OpenAI.Administration.Project
    name: Project
    href: Glitch9.AIDevKit.OpenAI.Administration.Project.html
  - name: )
- uid: UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync
  href: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.html#Glitch9_AIDevKit_OpenAI_Administration_AdministrationService_ProjectService_RetrieveAsync_System_String_RequestOptions_
  name: RetrieveAsync
  nameWithType: AdministrationService.ProjectService.RetrieveAsync
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.RetrieveAsync
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync
  href: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.html#Glitch9_AIDevKit_OpenAI_Administration_AdministrationService_ProjectService_ModifyAsync_System_String_System_String_RequestOptions_
  name: ModifyAsync
  nameWithType: AdministrationService.ProjectService.ModifyAsync
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ModifyAsync
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync
  href: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.html#Glitch9_AIDevKit_OpenAI_Administration_AdministrationService_ProjectService_ArchiveAsync_System_String_RequestOptions_
  name: ArchiveAsync
  nameWithType: AdministrationService.ProjectService.ArchiveAsync
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ArchiveAsync
- uid: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ListAsync*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ListAsync
  href: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.html#Glitch9_AIDevKit_OpenAI_Administration_AdministrationService_ProjectService_ListAsync_CursorQuery_RequestOptions_
  name: ListAsync
  nameWithType: AdministrationService.ProjectService.ListAsync
  fullName: Glitch9.AIDevKit.OpenAI.Administration.AdministrationService.ProjectService.ListAsync
- uid: CursorQuery
  isExternal: true
  name: CursorQuery
  nameWithType: CursorQuery
  fullName: CursorQuery
- uid: UniTask{QueryResponse{Glitch9.AIDevKit.OpenAI.Administration.Project}}
  commentId: '!:UniTask{QueryResponse{Glitch9.AIDevKit.OpenAI.Administration.Project}}'
  definition: UniTask`1
  href: Glitch9.AIDevKit.OpenAI.Administration.Project.html
  name: UniTask<QueryResponse<Project>>
  nameWithType: UniTask<QueryResponse<Project>>
  fullName: UniTask<QueryResponse<Glitch9.AIDevKit.OpenAI.Administration.Project>>
  nameWithType.vb: UniTask(Of QueryResponse(Of Project))
  fullName.vb: UniTask(Of QueryResponse(Of Glitch9.AIDevKit.OpenAI.Administration.Project))
  name.vb: UniTask(Of QueryResponse(Of Project))
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: QueryResponse`1
    name: QueryResponse
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.OpenAI.Administration.Project
    name: Project
    href: Glitch9.AIDevKit.OpenAI.Administration.Project.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: QueryResponse`1
    name: QueryResponse
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.OpenAI.Administration.Project
    name: Project
    href: Glitch9.AIDevKit.OpenAI.Administration.Project.html
  - name: )
  - name: )
