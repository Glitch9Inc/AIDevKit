### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.OpenAI.Expiration
  commentId: T:Glitch9.AIDevKit.OpenAI.Expiration
  id: Expiration
  parent: Glitch9.AIDevKit.OpenAI
  children:
  - Glitch9.AIDevKit.OpenAI.Expiration.Anchor
  - Glitch9.AIDevKit.OpenAI.Expiration.Days
  langs:
  - csharp
  - vb
  name: Expiration
  nameWithType: Expiration
  fullName: Glitch9.AIDevKit.OpenAI.Expiration
  type: Class
  source:
    id: Expiration
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/VectorStores/VectorStores/Expiration.cs
    startLine: 4
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public class Expiration
    content.vb: Public Class Expiration
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.OpenAI.Expiration.Anchor
  commentId: P:Glitch9.AIDevKit.OpenAI.Expiration.Anchor
  id: Anchor
  parent: Glitch9.AIDevKit.OpenAI.Expiration
  langs:
  - csharp
  - vb
  name: Anchor
  nameWithType: Expiration.Anchor
  fullName: Glitch9.AIDevKit.OpenAI.Expiration.Anchor
  type: Property
  source:
    id: Anchor
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/VectorStores/VectorStores/Expiration.cs
    startLine: 9
  namespace: Glitch9.AIDevKit.OpenAI
  summary: 'Anchor timestamp after which the expiration policy applies. Supported anchors: last_active_at.'
  example: []
  syntax:
    content: public string Anchor { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Anchor As String
  overload: Glitch9.AIDevKit.OpenAI.Expiration.Anchor*
- uid: Glitch9.AIDevKit.OpenAI.Expiration.Days
  commentId: P:Glitch9.AIDevKit.OpenAI.Expiration.Days
  id: Days
  parent: Glitch9.AIDevKit.OpenAI.Expiration
  langs:
  - csharp
  - vb
  name: Days
  nameWithType: Expiration.Days
  fullName: Glitch9.AIDevKit.OpenAI.Expiration.Days
  type: Property
  source:
    id: Days
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/VectorStores/VectorStores/Expiration.cs
    startLine: 14
  namespace: Glitch9.AIDevKit.OpenAI
  summary: The number of days after the anchor time that the vector store will expire.
  example: []
  syntax:
    content: public int? Days { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Days As Integer?
  overload: Glitch9.AIDevKit.OpenAI.Expiration.Days*
references:
- uid: Glitch9.AIDevKit.OpenAI
  commentId: N:Glitch9.AIDevKit.OpenAI
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI
  nameWithType: Glitch9.AIDevKit.OpenAI
  fullName: Glitch9.AIDevKit.OpenAI
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.OpenAI.Expiration.Anchor*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Expiration.Anchor
  href: Glitch9.AIDevKit.OpenAI.Expiration.html#Glitch9_AIDevKit_OpenAI_Expiration_Anchor
  name: Anchor
  nameWithType: Expiration.Anchor
  fullName: Glitch9.AIDevKit.OpenAI.Expiration.Anchor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Glitch9.AIDevKit.OpenAI.Expiration.Days*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Expiration.Days
  href: Glitch9.AIDevKit.OpenAI.Expiration.html#Glitch9_AIDevKit_OpenAI_Expiration_Days
  name: Days
  nameWithType: Expiration.Days
  fullName: Glitch9.AIDevKit.OpenAI.Expiration.Days
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
