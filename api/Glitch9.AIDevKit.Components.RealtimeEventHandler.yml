### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler
  commentId: T:Glitch9.AIDevKit.Components.RealtimeEventHandler
  id: RealtimeEventHandler
  parent: Glitch9.AIDevKit.Components
  children:
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudio
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudioClip
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudioDone
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveInputTranscriptionFailed
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveInputTranscriptionSuccess
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveText
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTextDone
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTranscript
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTranscriptDone
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onSessionStateChanged
  - Glitch9.AIDevKit.Components.RealtimeEventHandler.onWebSocketStateChanged
  langs:
  - csharp
  - vb
  name: RealtimeEventHandler
  nameWithType: RealtimeEventHandler
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler
  type: Class
  source:
    id: RealtimeEventHandler
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 10
  namespace: Glitch9.AIDevKit.Components
  summary: >-
    Event handler for real-time assistant events.

    Provides UnityEvents that are triggered by the RealtimeEventReceiver.
  example: []
  syntax:
    content: 'public class RealtimeEventHandler : AIDevKitEventHandler'
    content.vb: Public Class RealtimeEventHandler Inherits AIDevKitEventHandler
  inheritance:
  - System.Object
  - Glitch9.AIDevKit.Components.AIDevKitEventHandler
  inheritedMembers:
  - Glitch9.AIDevKit.Components.AIDevKitEventHandler.onError
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudio
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudio
  id: onReceiveAudio
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveAudio
  nameWithType: RealtimeEventHandler.onReceiveAudio
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudio
  type: Field
  source:
    id: onReceiveAudio
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 17
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when a chunk of audio data (float array) is received during streaming.
  example: []
  syntax:
    content: public UnityEvent<float[]> onReceiveAudio
    return:
      type: UnityEvent{System.Single[]}
    content.vb: Public onReceiveAudio As UnityEvent(Of Single())
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudioDone
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudioDone
  id: onReceiveAudioDone
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveAudioDone
  nameWithType: RealtimeEventHandler.onReceiveAudioDone
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudioDone
  type: Field
  source:
    id: onReceiveAudioDone
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 23
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when the full audio stream has been received and finalized.
  example: []
  syntax:
    content: public UnityEvent<float[]> onReceiveAudioDone
    return:
      type: UnityEvent{System.Single[]}
    content.vb: Public onReceiveAudioDone As UnityEvent(Of Single())
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudioClip
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudioClip
  id: onReceiveAudioClip
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveAudioClip
  nameWithType: RealtimeEventHandler.onReceiveAudioClip
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveAudioClip
  type: Field
  source:
    id: onReceiveAudioClip
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 29
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when an AudioClip is constructed from received audio.
  example: []
  syntax:
    content: public UnityEvent<AudioClip> onReceiveAudioClip
    return:
      type: UnityEvent{AudioClip}
    content.vb: Public onReceiveAudioClip As UnityEvent(Of AudioClip)
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveText
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveText
  id: onReceiveText
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveText
  nameWithType: RealtimeEventHandler.onReceiveText
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveText
  type: Field
  source:
    id: onReceiveText
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 35
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when a text delta (partial text) is received during streaming.
  example: []
  syntax:
    content: public UnityEvent<string> onReceiveText
    return:
      type: UnityEvent{System.String}
    content.vb: Public onReceiveText As UnityEvent(Of String)
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTextDone
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTextDone
  id: onReceiveTextDone
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveTextDone
  nameWithType: RealtimeEventHandler.onReceiveTextDone
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTextDone
  type: Field
  source:
    id: onReceiveTextDone
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 41
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when the text response is complete.
  example: []
  syntax:
    content: public UnityEvent<string> onReceiveTextDone
    return:
      type: UnityEvent{System.String}
    content.vb: Public onReceiveTextDone As UnityEvent(Of String)
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTranscript
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTranscript
  id: onReceiveTranscript
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveTranscript
  nameWithType: RealtimeEventHandler.onReceiveTranscript
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTranscript
  type: Field
  source:
    id: onReceiveTranscript
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 47
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when a partial transcript is received during real-time transcription.
  example: []
  syntax:
    content: public UnityEvent<string> onReceiveTranscript
    return:
      type: UnityEvent{System.String}
    content.vb: Public onReceiveTranscript As UnityEvent(Of String)
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTranscriptDone
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTranscriptDone
  id: onReceiveTranscriptDone
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveTranscriptDone
  nameWithType: RealtimeEventHandler.onReceiveTranscriptDone
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveTranscriptDone
  type: Field
  source:
    id: onReceiveTranscriptDone
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 53
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when the full transcript is finalized.
  example: []
  syntax:
    content: public UnityEvent<string> onReceiveTranscriptDone
    return:
      type: UnityEvent{System.String}
    content.vb: Public onReceiveTranscriptDone As UnityEvent(Of String)
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveInputTranscriptionSuccess
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveInputTranscriptionSuccess
  id: onReceiveInputTranscriptionSuccess
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveInputTranscriptionSuccess
  nameWithType: RealtimeEventHandler.onReceiveInputTranscriptionSuccess
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveInputTranscriptionSuccess
  type: Field
  source:
    id: onReceiveInputTranscriptionSuccess
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 59
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when input audio transcription completes successfully.
  example: []
  syntax:
    content: public UnityEvent<string> onReceiveInputTranscriptionSuccess
    return:
      type: UnityEvent{System.String}
    content.vb: Public onReceiveInputTranscriptionSuccess As UnityEvent(Of String)
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveInputTranscriptionFailed
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveInputTranscriptionFailed
  id: onReceiveInputTranscriptionFailed
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onReceiveInputTranscriptionFailed
  nameWithType: RealtimeEventHandler.onReceiveInputTranscriptionFailed
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onReceiveInputTranscriptionFailed
  type: Field
  source:
    id: onReceiveInputTranscriptionFailed
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 65
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when input audio transcription fails.
  example: []
  syntax:
    content: public UnityEvent<ErrorResponse> onReceiveInputTranscriptionFailed
    return:
      type: UnityEvent{Glitch9.AIDevKit.ErrorResponse}
    content.vb: Public onReceiveInputTranscriptionFailed As UnityEvent(Of ErrorResponse)
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onSessionStateChanged
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onSessionStateChanged
  id: onSessionStateChanged
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onSessionStateChanged
  nameWithType: RealtimeEventHandler.onSessionStateChanged
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onSessionStateChanged
  type: Field
  source:
    id: onSessionStateChanged
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 71
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when the session state changes.
  example: []
  syntax:
    content: public UnityEvent<string> onSessionStateChanged
    return:
      type: UnityEvent{System.String}
    content.vb: Public onSessionStateChanged As UnityEvent(Of String)
- uid: Glitch9.AIDevKit.Components.RealtimeEventHandler.onWebSocketStateChanged
  commentId: F:Glitch9.AIDevKit.Components.RealtimeEventHandler.onWebSocketStateChanged
  id: onWebSocketStateChanged
  parent: Glitch9.AIDevKit.Components.RealtimeEventHandler
  langs:
  - csharp
  - vb
  name: onWebSocketStateChanged
  nameWithType: RealtimeEventHandler.onWebSocketStateChanged
  fullName: Glitch9.AIDevKit.Components.RealtimeEventHandler.onWebSocketStateChanged
  type: Field
  source:
    id: onWebSocketStateChanged
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Components/RealtimeEventHandler.cs
    startLine: 77
  namespace: Glitch9.AIDevKit.Components
  summary: Invoked when the WebSocket connection state changes.
  example: []
  syntax:
    content: public UnityEvent<WebSocketState> onWebSocketStateChanged
    return:
      type: UnityEvent{System.Net.WebSockets.WebSocketState}
    content.vb: Public onWebSocketStateChanged As UnityEvent(Of WebSocketState)
references:
- uid: Glitch9.AIDevKit.Components
  commentId: N:Glitch9.AIDevKit.Components
  href: Glitch9.html
  name: Glitch9.AIDevKit.Components
  nameWithType: Glitch9.AIDevKit.Components
  fullName: Glitch9.AIDevKit.Components
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Components
    name: Components
    href: Glitch9.AIDevKit.Components.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Components
    name: Components
    href: Glitch9.AIDevKit.Components.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Glitch9.AIDevKit.Components.AIDevKitEventHandler
  commentId: T:Glitch9.AIDevKit.Components.AIDevKitEventHandler
  parent: Glitch9.AIDevKit.Components
  href: Glitch9.AIDevKit.Components.AIDevKitEventHandler.html
  name: AIDevKitEventHandler
  nameWithType: AIDevKitEventHandler
  fullName: Glitch9.AIDevKit.Components.AIDevKitEventHandler
- uid: Glitch9.AIDevKit.Components.AIDevKitEventHandler.onError
  commentId: F:Glitch9.AIDevKit.Components.AIDevKitEventHandler.onError
  parent: Glitch9.AIDevKit.Components.AIDevKitEventHandler
  href: Glitch9.AIDevKit.Components.AIDevKitEventHandler.html#Glitch9_AIDevKit_Components_AIDevKitEventHandler_onError
  name: onError
  nameWithType: AIDevKitEventHandler.onError
  fullName: Glitch9.AIDevKit.Components.AIDevKitEventHandler.onError
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEvent{System.Single[]}
  commentId: '!:UnityEvent{System.Single[]}'
  definition: UnityEvent`1
  name: UnityEvent<float[]>
  nameWithType: UnityEvent<float[]>
  fullName: UnityEvent<float[]>
  nameWithType.vb: UnityEvent(Of Single())
  fullName.vb: UnityEvent(Of Single())
  name.vb: UnityEvent(Of Single())
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UnityEvent`1
  isExternal: true
  name: UnityEvent<>
  nameWithType: UnityEvent<>
  fullName: UnityEvent<>
  nameWithType.vb: UnityEvent(Of )
  fullName.vb: UnityEvent(Of )
  name.vb: UnityEvent(Of )
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: UnityEvent{AudioClip}
  commentId: '!:UnityEvent{AudioClip}'
  definition: UnityEvent`1
  name: UnityEvent<AudioClip>
  nameWithType: UnityEvent<AudioClip>
  fullName: UnityEvent<AudioClip>
  nameWithType.vb: UnityEvent(Of AudioClip)
  fullName.vb: UnityEvent(Of AudioClip)
  name.vb: UnityEvent(Of AudioClip)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: AudioClip
    name: AudioClip
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: AudioClip
    name: AudioClip
    isExternal: true
  - name: )
- uid: UnityEvent{System.String}
  commentId: '!:UnityEvent{System.String}'
  definition: UnityEvent`1
  name: UnityEvent<string>
  nameWithType: UnityEvent<string>
  fullName: UnityEvent<string>
  nameWithType.vb: UnityEvent(Of String)
  fullName.vb: UnityEvent(Of String)
  name.vb: UnityEvent(Of String)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: UnityEvent{Glitch9.AIDevKit.ErrorResponse}
  commentId: '!:UnityEvent{Glitch9.AIDevKit.ErrorResponse}'
  definition: UnityEvent`1
  href: Glitch9.AIDevKit.ErrorResponse.html
  name: UnityEvent<ErrorResponse>
  nameWithType: UnityEvent<ErrorResponse>
  fullName: UnityEvent<Glitch9.AIDevKit.ErrorResponse>
  nameWithType.vb: UnityEvent(Of ErrorResponse)
  fullName.vb: UnityEvent(Of Glitch9.AIDevKit.ErrorResponse)
  name.vb: UnityEvent(Of ErrorResponse)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.ErrorResponse
    name: ErrorResponse
    href: Glitch9.AIDevKit.ErrorResponse.html
  - name: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.ErrorResponse
    name: ErrorResponse
    href: Glitch9.AIDevKit.ErrorResponse.html
  - name: )
- uid: UnityEvent{System.Net.WebSockets.WebSocketState}
  commentId: '!:UnityEvent{System.Net.WebSockets.WebSocketState}'
  definition: UnityEvent`1
  name: UnityEvent<WebSocketState>
  nameWithType: UnityEvent<WebSocketState>
  fullName: UnityEvent<System.Net.WebSockets.WebSocketState>
  nameWithType.vb: UnityEvent(Of WebSocketState)
  fullName.vb: UnityEvent(Of System.Net.WebSockets.WebSocketState)
  name.vb: UnityEvent(Of WebSocketState)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    isExternal: true
  - name: )
