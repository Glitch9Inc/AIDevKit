### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService
  commentId: T:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService
  id: RealtimeService
  parent: Glitch9.AIDevKit.OpenAI.Realtime
  children:
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.Model,Glitch9.AIDevKit.Model,SystemLanguage,System.Action{System.Single[]},System.Action{System.Single[]},System.Action{AudioClip},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{Glitch9.AIDevKit.ErrorResponse},System.Action{System.String},Glitch9.AIDevKit.Components.FunctionManager,System.Boolean,System.Boolean,System.Boolean)
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase,Glitch9.AIDevKit.Model,Glitch9.AIDevKit.Model,SystemLanguage,System.Boolean,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: RealtimeService
  nameWithType: RealtimeService
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService
  type: Class
  source:
    id: RealtimeService
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeService.cs
    startLine: 9
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static class RealtimeService
    content.vb: Public Module RealtimeService
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.Model,Glitch9.AIDevKit.Model,SystemLanguage,System.Action{System.Single[]},System.Action{System.Single[]},System.Action{AudioClip},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{Glitch9.AIDevKit.ErrorResponse},System.Action{System.String},Glitch9.AIDevKit.Components.FunctionManager,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.Model,Glitch9.AIDevKit.Model,SystemLanguage,System.Action{System.Single[]},System.Action{System.Single[]},System.Action{AudioClip},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{Glitch9.AIDevKit.ErrorResponse},System.Action{System.String},Glitch9.AIDevKit.Components.FunctionManager,System.Boolean,System.Boolean,System.Boolean)
  id: CreateSession(Glitch9.AIDevKit.Model,Glitch9.AIDevKit.Model,SystemLanguage,System.Action{System.Single[]},System.Action{System.Single[]},System.Action{AudioClip},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Action{Glitch9.AIDevKit.ErrorResponse},System.Action{System.String},Glitch9.AIDevKit.Components.FunctionManager,System.Boolean,System.Boolean,System.Boolean)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService
  langs:
  - csharp
  - vb
  name: CreateSession(Model, Model, SystemLanguage, Action<float[]>, Action<float[]>, Action<AudioClip>, Action<string>, Action<string>, Action<string>, Action<string>, Action<string>, Action<ErrorResponse>, Action<string>, FunctionManager, bool, bool, bool)
  nameWithType: RealtimeService.CreateSession(Model, Model, SystemLanguage, Action<float[]>, Action<float[]>, Action<AudioClip>, Action<string>, Action<string>, Action<string>, Action<string>, Action<string>, Action<ErrorResponse>, Action<string>, FunctionManager, bool, bool, bool)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.Model, Glitch9.AIDevKit.Model, SystemLanguage, System.Action<float[]>, System.Action<float[]>, System.Action<AudioClip>, System.Action<string>, System.Action<string>, System.Action<string>, System.Action<string>, System.Action<string>, System.Action<Glitch9.AIDevKit.ErrorResponse>, System.Action<string>, Glitch9.AIDevKit.Components.FunctionManager, bool, bool, bool)
  type: Method
  source:
    id: CreateSession
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeService.cs
    startLine: 11
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static RealtimeSessionController CreateSession(Model rtmModel = null, Model sttModel = null, SystemLanguage spokenLanguage = null, Action<float[]> onReceiveAudio = null, Action<float[]> onReceiveAudioDone = null, Action<AudioClip> onReceiveAudioClip = null, Action<string> onReceiveText = null, Action<string> onReceiveTextDone = null, Action<string> onReceiveTranscript = null, Action<string> onReceiveTranscriptDone = null, Action<string> onReceiveInputTranscriptionSuccess = null, Action<ErrorResponse> onReceiveInputTranscriptionFailed = null, Action<string> onSessionStateChanged = null, FunctionManager functionManager = null, bool enableAudio = true, bool enableTranscript = true, bool autoManageWebSocketState = false)
    parameters:
    - id: rtmModel
      type: Glitch9.AIDevKit.Model
    - id: sttModel
      type: Glitch9.AIDevKit.Model
    - id: spokenLanguage
      type: SystemLanguage
    - id: onReceiveAudio
      type: System.Action{System.Single[]}
    - id: onReceiveAudioDone
      type: System.Action{System.Single[]}
    - id: onReceiveAudioClip
      type: System.Action{AudioClip}
    - id: onReceiveText
      type: System.Action{System.String}
    - id: onReceiveTextDone
      type: System.Action{System.String}
    - id: onReceiveTranscript
      type: System.Action{System.String}
    - id: onReceiveTranscriptDone
      type: System.Action{System.String}
    - id: onReceiveInputTranscriptionSuccess
      type: System.Action{System.String}
    - id: onReceiveInputTranscriptionFailed
      type: System.Action{Glitch9.AIDevKit.ErrorResponse}
    - id: onSessionStateChanged
      type: System.Action{System.String}
    - id: functionManager
      type: Glitch9.AIDevKit.Components.FunctionManager
    - id: enableAudio
      type: System.Boolean
    - id: enableTranscript
      type: System.Boolean
    - id: autoManageWebSocketState
      type: System.Boolean
    return:
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeSessionController
    content.vb: Public Shared Function CreateSession(rtmModel As Model = Nothing, sttModel As Model = Nothing, spokenLanguage As SystemLanguage = Nothing, onReceiveAudio As Action(Of Single()) = Nothing, onReceiveAudioDone As Action(Of Single()) = Nothing, onReceiveAudioClip As Action(Of AudioClip) = Nothing, onReceiveText As Action(Of String) = Nothing, onReceiveTextDone As Action(Of String) = Nothing, onReceiveTranscript As Action(Of String) = Nothing, onReceiveTranscriptDone As Action(Of String) = Nothing, onReceiveInputTranscriptionSuccess As Action(Of String) = Nothing, onReceiveInputTranscriptionFailed As Action(Of ErrorResponse) = Nothing, onSessionStateChanged As Action(Of String) = Nothing, functionManager As FunctionManager = Nothing, enableAudio As Boolean = True, enableTranscript As Boolean = True, autoManageWebSocketState As Boolean = False) As RealtimeSessionController
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession*
  nameWithType.vb: RealtimeService.CreateSession(Model, Model, SystemLanguage, Action(Of Single()), Action(Of Single()), Action(Of AudioClip), Action(Of String), Action(Of String), Action(Of String), Action(Of String), Action(Of String), Action(Of ErrorResponse), Action(Of String), FunctionManager, Boolean, Boolean, Boolean)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.Model, Glitch9.AIDevKit.Model, SystemLanguage, System.Action(Of Single()), System.Action(Of Single()), System.Action(Of AudioClip), System.Action(Of String), System.Action(Of String), System.Action(Of String), System.Action(Of String), System.Action(Of String), System.Action(Of Glitch9.AIDevKit.ErrorResponse), System.Action(Of String), Glitch9.AIDevKit.Components.FunctionManager, Boolean, Boolean, Boolean)
  name.vb: CreateSession(Model, Model, SystemLanguage, Action(Of Single()), Action(Of Single()), Action(Of AudioClip), Action(Of String), Action(Of String), Action(Of String), Action(Of String), Action(Of String), Action(Of ErrorResponse), Action(Of String), FunctionManager, Boolean, Boolean, Boolean)
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase,Glitch9.AIDevKit.Model,Glitch9.AIDevKit.Model,SystemLanguage,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase,Glitch9.AIDevKit.Model,Glitch9.AIDevKit.Model,SystemLanguage,System.Boolean,System.Boolean,System.Boolean)
  id: CreateSession(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase,Glitch9.AIDevKit.Model,Glitch9.AIDevKit.Model,SystemLanguage,System.Boolean,System.Boolean,System.Boolean)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService
  langs:
  - csharp
  - vb
  name: CreateSession(RealtimeEventReceiverBase, Model, Model, SystemLanguage, bool, bool, bool)
  nameWithType: RealtimeService.CreateSession(RealtimeEventReceiverBase, Model, Model, SystemLanguage, bool, bool, bool)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase, Glitch9.AIDevKit.Model, Glitch9.AIDevKit.Model, SystemLanguage, bool, bool, bool)
  type: Method
  source:
    id: CreateSession
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeService.cs
    startLine: 54
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static RealtimeSessionController CreateSession(RealtimeEventReceiverBase customEventReceiver, Model rtmModel = null, Model sttModel = null, SystemLanguage spokenLanguage = null, bool enableAudio = true, bool enableTranscript = true, bool autoManageWebSocketState = false)
    parameters:
    - id: customEventReceiver
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase
    - id: rtmModel
      type: Glitch9.AIDevKit.Model
    - id: sttModel
      type: Glitch9.AIDevKit.Model
    - id: spokenLanguage
      type: SystemLanguage
    - id: enableAudio
      type: System.Boolean
    - id: enableTranscript
      type: System.Boolean
    - id: autoManageWebSocketState
      type: System.Boolean
    return:
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeSessionController
    content.vb: Public Shared Function CreateSession(customEventReceiver As RealtimeEventReceiverBase, rtmModel As Model = Nothing, sttModel As Model = Nothing, spokenLanguage As SystemLanguage = Nothing, enableAudio As Boolean = True, enableTranscript As Boolean = True, autoManageWebSocketState As Boolean = False) As RealtimeSessionController
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession*
  nameWithType.vb: RealtimeService.CreateSession(RealtimeEventReceiverBase, Model, Model, SystemLanguage, Boolean, Boolean, Boolean)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase, Glitch9.AIDevKit.Model, Glitch9.AIDevKit.Model, SystemLanguage, Boolean, Boolean, Boolean)
  name.vb: CreateSession(RealtimeEventReceiverBase, Model, Model, SystemLanguage, Boolean, Boolean, Boolean)
references:
- uid: Glitch9.AIDevKit.OpenAI.Realtime
  commentId: N:Glitch9.AIDevKit.OpenAI.Realtime
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI.Realtime
  nameWithType: Glitch9.AIDevKit.OpenAI.Realtime
  fullName: Glitch9.AIDevKit.OpenAI.Realtime
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Realtime
    name: Realtime
    href: Glitch9.AIDevKit.OpenAI.Realtime.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Realtime
    name: Realtime
    href: Glitch9.AIDevKit.OpenAI.Realtime.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.html#Glitch9_AIDevKit_OpenAI_Realtime_RealtimeService_CreateSession_Glitch9_AIDevKit_Model_Glitch9_AIDevKit_Model_SystemLanguage_System_Action_System_Single____System_Action_System_Single____System_Action_AudioClip__System_Action_System_String__System_Action_System_String__System_Action_System_String__System_Action_System_String__System_Action_System_String__System_Action_Glitch9_AIDevKit_ErrorResponse__System_Action_System_String__Glitch9_AIDevKit_Components_FunctionManager_System_Boolean_System_Boolean_System_Boolean_
  name: CreateSession
  nameWithType: RealtimeService.CreateSession
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeService.CreateSession
- uid: Glitch9.AIDevKit.Model
  commentId: T:Glitch9.AIDevKit.Model
  parent: Glitch9.AIDevKit
  href: Glitch9.AIDevKit.Model.html
  name: Model
  nameWithType: Model
  fullName: Glitch9.AIDevKit.Model
- uid: SystemLanguage
  isExternal: true
  name: SystemLanguage
  nameWithType: SystemLanguage
  fullName: SystemLanguage
- uid: System.Action{System.Single[]}
  commentId: T:System.Action{System.Single[]}
  parent: System
  definition: System.Action`1
  name: Action<float[]>
  nameWithType: Action<float[]>
  fullName: System.Action<float[]>
  nameWithType.vb: Action(Of Single())
  fullName.vb: System.Action(Of Single())
  name.vb: Action(Of Single())
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: System.Action{AudioClip}
  commentId: T:System.Action{AudioClip}
  parent: System
  definition: System.Action`1
  name: Action<AudioClip>
  nameWithType: Action<AudioClip>
  fullName: System.Action<AudioClip>
  nameWithType.vb: Action(Of AudioClip)
  fullName.vb: System.Action(Of AudioClip)
  name.vb: Action(Of AudioClip)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: AudioClip
    name: AudioClip
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: AudioClip
    name: AudioClip
    isExternal: true
  - name: )
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  name: Action<string>
  nameWithType: Action<string>
  fullName: System.Action<string>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Action{Glitch9.AIDevKit.ErrorResponse}
  commentId: T:System.Action{Glitch9.AIDevKit.ErrorResponse}
  parent: System
  definition: System.Action`1
  href: Glitch9.AIDevKit.ErrorResponse.html
  name: Action<ErrorResponse>
  nameWithType: Action<ErrorResponse>
  fullName: System.Action<Glitch9.AIDevKit.ErrorResponse>
  nameWithType.vb: Action(Of ErrorResponse)
  fullName.vb: System.Action(Of Glitch9.AIDevKit.ErrorResponse)
  name.vb: Action(Of ErrorResponse)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: Glitch9.AIDevKit.ErrorResponse
    name: ErrorResponse
    href: Glitch9.AIDevKit.ErrorResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Glitch9.AIDevKit.ErrorResponse
    name: ErrorResponse
    href: Glitch9.AIDevKit.ErrorResponse.html
  - name: )
- uid: Glitch9.AIDevKit.Components.FunctionManager
  commentId: T:Glitch9.AIDevKit.Components.FunctionManager
  parent: Glitch9.AIDevKit.Components
  href: Glitch9.AIDevKit.Components.FunctionManager.html
  name: FunctionManager
  nameWithType: FunctionManager
  fullName: Glitch9.AIDevKit.Components.FunctionManager
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeSessionController
  commentId: T:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeSessionController
  parent: Glitch9.AIDevKit.OpenAI.Realtime
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeSessionController.html
  name: RealtimeSessionController
  nameWithType: RealtimeSessionController
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeSessionController
- uid: Glitch9.AIDevKit
  commentId: N:Glitch9.AIDevKit
  href: Glitch9.html
  name: Glitch9.AIDevKit
  nameWithType: Glitch9.AIDevKit
  fullName: Glitch9.AIDevKit
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Glitch9.AIDevKit.Components
  commentId: N:Glitch9.AIDevKit.Components
  href: Glitch9.html
  name: Glitch9.AIDevKit.Components
  nameWithType: Glitch9.AIDevKit.Components
  fullName: Glitch9.AIDevKit.Components
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Components
    name: Components
    href: Glitch9.AIDevKit.Components.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Components
    name: Components
    href: Glitch9.AIDevKit.Components.html
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase
  commentId: T:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase
  parent: Glitch9.AIDevKit.OpenAI.Realtime
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase.html
  name: RealtimeEventReceiverBase
  nameWithType: RealtimeEventReceiverBase
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeEventReceiverBase
