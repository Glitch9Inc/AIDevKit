### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.Google.CountTokensResponse
  commentId: T:Glitch9.AIDevKit.Google.CountTokensResponse
  id: CountTokensResponse
  parent: Glitch9.AIDevKit.Google
  children:
  - Glitch9.AIDevKit.Google.CountTokensResponse.TotalTokens
  langs:
  - csharp
  - vb
  name: CountTokensResponse
  nameWithType: CountTokensResponse
  fullName: Glitch9.AIDevKit.Google.CountTokensResponse
  type: Class
  source:
    id: CountTokensResponse
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Models/Models/CountTokens/CountTokensResponse.cs
    startLine: 7
  namespace: Glitch9.AIDevKit.Google
  summary: Response from calling {@link GenerativeModel.countTokens}.
  example: []
  syntax:
    content: public class CountTokensResponse
    content.vb: Public Class CountTokensResponse
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.Google.CountTokensResponse.TotalTokens
  commentId: P:Glitch9.AIDevKit.Google.CountTokensResponse.TotalTokens
  id: TotalTokens
  parent: Glitch9.AIDevKit.Google.CountTokensResponse
  langs:
  - csharp
  - vb
  name: TotalTokens
  nameWithType: CountTokensResponse.TotalTokens
  fullName: Glitch9.AIDevKit.Google.CountTokensResponse.TotalTokens
  type: Property
  source:
    id: TotalTokens
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Google/Models/Models/CountTokens/CountTokensResponse.cs
    startLine: 9
  namespace: Glitch9.AIDevKit.Google
  syntax:
    content: public int? TotalTokens { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property TotalTokens As Integer?
  overload: Glitch9.AIDevKit.Google.CountTokensResponse.TotalTokens*
references:
- uid: Glitch9.AIDevKit.Google
  commentId: N:Glitch9.AIDevKit.Google
  href: Glitch9.html
  name: Glitch9.AIDevKit.Google
  nameWithType: Glitch9.AIDevKit.Google
  fullName: Glitch9.AIDevKit.Google
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.Google
    name: Google
    href: Glitch9.AIDevKit.Google.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.Google.CountTokensResponse.TotalTokens*
  commentId: Overload:Glitch9.AIDevKit.Google.CountTokensResponse.TotalTokens
  href: Glitch9.AIDevKit.Google.CountTokensResponse.html#Glitch9_AIDevKit_Google_CountTokensResponse_TotalTokens
  name: TotalTokens
  nameWithType: CountTokensResponse.TotalTokens
  fullName: Glitch9.AIDevKit.Google.CountTokensResponse.TotalTokens
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
