### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.OpenAI.Attachment
  commentId: T:Glitch9.AIDevKit.OpenAI.Attachment
  id: Attachment
  parent: Glitch9.AIDevKit.OpenAI
  children:
  - Glitch9.AIDevKit.OpenAI.Attachment.#ctor(Glitch9.AIDevKit.ToolCall[])
  - Glitch9.AIDevKit.OpenAI.Attachment.#ctor(System.String,Glitch9.AIDevKit.ToolType)
  - Glitch9.AIDevKit.OpenAI.Attachment.Equals(System.Object)
  - Glitch9.AIDevKit.OpenAI.Attachment.FileId
  - Glitch9.AIDevKit.OpenAI.Attachment.GetHashCode
  - Glitch9.AIDevKit.OpenAI.Attachment.IsFileId
  - Glitch9.AIDevKit.OpenAI.Attachment.IsTools
  - Glitch9.AIDevKit.OpenAI.Attachment.ToString
  - Glitch9.AIDevKit.OpenAI.Attachment.Tools
  - Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit(Glitch9.AIDevKit.ToolCall[])~Glitch9.AIDevKit.OpenAI.Attachment
  - Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit(System.String)~Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: Attachment
  nameWithType: Attachment
  fullName: Glitch9.AIDevKit.OpenAI.Attachment
  type: Class
  source:
    id: Attachment
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 5
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public class Attachment
    content.vb: Public Class Attachment
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit(System.String)~Glitch9.AIDevKit.OpenAI.Attachment
  commentId: M:Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit(System.String)~Glitch9.AIDevKit.OpenAI.Attachment
  id: op_Implicit(System.String)~Glitch9.AIDevKit.OpenAI.Attachment
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: implicit operator Attachment(string)
  nameWithType: Attachment.implicit operator Attachment(string)
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.implicit operator Glitch9.AIDevKit.OpenAI.Attachment(string)
  type: Operator
  source:
    id: op_Implicit
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 7
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public static implicit operator Attachment(string fileId)
    parameters:
    - id: fileId
      type: System.String
    return:
      type: Glitch9.AIDevKit.OpenAI.Attachment
    content.vb: Public Shared Widening Operator CType(fileId As String) As Attachment
  overload: Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit*
  nameWithType.vb: Attachment.CType(String)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Attachment.CType(String)
  name.vb: CType(String)
- uid: Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit(Glitch9.AIDevKit.ToolCall[])~Glitch9.AIDevKit.OpenAI.Attachment
  commentId: M:Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit(Glitch9.AIDevKit.ToolCall[])~Glitch9.AIDevKit.OpenAI.Attachment
  id: op_Implicit(Glitch9.AIDevKit.ToolCall[])~Glitch9.AIDevKit.OpenAI.Attachment
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: implicit operator Attachment(ToolCall[])
  nameWithType: Attachment.implicit operator Attachment(ToolCall[])
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.implicit operator Glitch9.AIDevKit.OpenAI.Attachment(Glitch9.AIDevKit.ToolCall[])
  type: Operator
  source:
    id: op_Implicit
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 8
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public static implicit operator Attachment(ToolCall[] tools)
    parameters:
    - id: tools
      type: Glitch9.AIDevKit.ToolCall[]
    return:
      type: Glitch9.AIDevKit.OpenAI.Attachment
    content.vb: Public Shared Widening Operator CType(tools As ToolCall()) As Attachment
  overload: Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit*
  nameWithType.vb: Attachment.CType(ToolCall())
  fullName.vb: Glitch9.AIDevKit.OpenAI.Attachment.CType(Glitch9.AIDevKit.ToolCall())
  name.vb: CType(ToolCall())
- uid: Glitch9.AIDevKit.OpenAI.Attachment.FileId
  commentId: P:Glitch9.AIDevKit.OpenAI.Attachment.FileId
  id: FileId
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: FileId
  nameWithType: Attachment.FileId
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.FileId
  type: Property
  source:
    id: FileId
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 10
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public string FileId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FileId As String
  overload: Glitch9.AIDevKit.OpenAI.Attachment.FileId*
- uid: Glitch9.AIDevKit.OpenAI.Attachment.Tools
  commentId: P:Glitch9.AIDevKit.OpenAI.Attachment.Tools
  id: Tools
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: Tools
  nameWithType: Attachment.Tools
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.Tools
  type: Property
  source:
    id: Tools
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 16
  namespace: Glitch9.AIDevKit.OpenAI
  summary: >-
    This is only for 'code_interpreter' and 'file_search'.

    This is not for 'function'.
  example: []
  syntax:
    content: public ToolCall[] Tools { get; set; }
    parameters: []
    return:
      type: Glitch9.AIDevKit.ToolCall[]
    content.vb: Public Property Tools As ToolCall()
  overload: Glitch9.AIDevKit.OpenAI.Attachment.Tools*
- uid: Glitch9.AIDevKit.OpenAI.Attachment.IsFileId
  commentId: P:Glitch9.AIDevKit.OpenAI.Attachment.IsFileId
  id: IsFileId
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: IsFileId
  nameWithType: Attachment.IsFileId
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.IsFileId
  type: Property
  source:
    id: IsFileId
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 18
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public bool IsFileId { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFileId As Boolean
  overload: Glitch9.AIDevKit.OpenAI.Attachment.IsFileId*
- uid: Glitch9.AIDevKit.OpenAI.Attachment.IsTools
  commentId: P:Glitch9.AIDevKit.OpenAI.Attachment.IsTools
  id: IsTools
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: IsTools
  nameWithType: Attachment.IsTools
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.IsTools
  type: Property
  source:
    id: IsTools
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 19
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public bool IsTools { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTools As Boolean
  overload: Glitch9.AIDevKit.OpenAI.Attachment.IsTools*
- uid: Glitch9.AIDevKit.OpenAI.Attachment.#ctor(System.String,Glitch9.AIDevKit.ToolType)
  commentId: M:Glitch9.AIDevKit.OpenAI.Attachment.#ctor(System.String,Glitch9.AIDevKit.ToolType)
  id: '#ctor(System.String,Glitch9.AIDevKit.ToolType)'
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: Attachment(string, ToolType)
  nameWithType: Attachment.Attachment(string, ToolType)
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.Attachment(string, Glitch9.AIDevKit.ToolType)
  type: Constructor
  source:
    id: .ctor
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 22
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public Attachment(string fileId, ToolType targetTool = ToolType.None)
    parameters:
    - id: fileId
      type: System.String
    - id: targetTool
      type: Glitch9.AIDevKit.ToolType
    content.vb: Public Sub New(fileId As String, targetTool As ToolType = ToolType.None)
  overload: Glitch9.AIDevKit.OpenAI.Attachment.#ctor*
  nameWithType.vb: Attachment.New(String, ToolType)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Attachment.New(String, Glitch9.AIDevKit.ToolType)
  name.vb: New(String, ToolType)
- uid: Glitch9.AIDevKit.OpenAI.Attachment.#ctor(Glitch9.AIDevKit.ToolCall[])
  commentId: M:Glitch9.AIDevKit.OpenAI.Attachment.#ctor(Glitch9.AIDevKit.ToolCall[])
  id: '#ctor(Glitch9.AIDevKit.ToolCall[])'
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: Attachment(params ToolCall[])
  nameWithType: Attachment.Attachment(params ToolCall[])
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.Attachment(params Glitch9.AIDevKit.ToolCall[])
  type: Constructor
  source:
    id: .ctor
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 29
  namespace: Glitch9.AIDevKit.OpenAI
  syntax:
    content: public Attachment(params ToolCall[] tools)
    parameters:
    - id: tools
      type: Glitch9.AIDevKit.ToolCall[]
    content.vb: Public Sub New(ParamArray tools As ToolCall())
  overload: Glitch9.AIDevKit.OpenAI.Attachment.#ctor*
  nameWithType.vb: Attachment.New(ParamArray ToolCall())
  fullName.vb: Glitch9.AIDevKit.OpenAI.Attachment.New(ParamArray Glitch9.AIDevKit.ToolCall())
  name.vb: New(ParamArray ToolCall())
- uid: Glitch9.AIDevKit.OpenAI.Attachment.Equals(System.Object)
  commentId: M:Glitch9.AIDevKit.OpenAI.Attachment.Equals(System.Object)
  id: Equals(System.Object)
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Attachment.Equals(object)
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.Equals(object)
  type: Method
  source:
    id: Equals
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 48
  namespace: Glitch9.AIDevKit.OpenAI
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Glitch9.AIDevKit.OpenAI.Attachment.Equals*
  nameWithType.vb: Attachment.Equals(Object)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Attachment.Equals(Object)
  name.vb: Equals(Object)
- uid: Glitch9.AIDevKit.OpenAI.Attachment.GetHashCode
  commentId: M:Glitch9.AIDevKit.OpenAI.Attachment.GetHashCode
  id: GetHashCode
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Attachment.GetHashCode()
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 56
  namespace: Glitch9.AIDevKit.OpenAI
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Glitch9.AIDevKit.OpenAI.Attachment.GetHashCode*
- uid: Glitch9.AIDevKit.OpenAI.Attachment.ToString
  commentId: M:Glitch9.AIDevKit.OpenAI.Attachment.ToString
  id: ToString
  parent: Glitch9.AIDevKit.OpenAI.Attachment
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Attachment.ToString()
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.ToString()
  type: Method
  source:
    id: ToString
    path: E:/UnityProjects/Glitch9/AIDevKit-Unity6/Assets/Glitch9/AIDevKit/Runtime/Scripts/OpenAI/Models/Endpoints/Messages/Attachment.cs
    startLine: 61
  namespace: Glitch9.AIDevKit.OpenAI
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Glitch9.AIDevKit.OpenAI.Attachment.ToString*
references:
- uid: Glitch9.AIDevKit.OpenAI
  commentId: N:Glitch9.AIDevKit.OpenAI
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI
  nameWithType: Glitch9.AIDevKit.OpenAI
  fullName: Glitch9.AIDevKit.OpenAI
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.op_Implicit
  name: implicit operator
  nameWithType: Attachment.implicit operator
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.implicit operator
  nameWithType.vb: Attachment.CType
  fullName.vb: Glitch9.AIDevKit.OpenAI.Attachment.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Glitch9.AIDevKit.OpenAI.Attachment
  commentId: T:Glitch9.AIDevKit.OpenAI.Attachment
  parent: Glitch9.AIDevKit.OpenAI
  href: Glitch9.AIDevKit.OpenAI.Attachment.html
  name: Attachment
  nameWithType: Attachment
  fullName: Glitch9.AIDevKit.OpenAI.Attachment
- uid: Glitch9.AIDevKit.ToolCall[]
  isExternal: true
  href: Glitch9.AIDevKit.ToolCall.html
  name: ToolCall[]
  nameWithType: ToolCall[]
  fullName: Glitch9.AIDevKit.ToolCall[]
  nameWithType.vb: ToolCall()
  fullName.vb: Glitch9.AIDevKit.ToolCall()
  name.vb: ToolCall()
  spec.csharp:
  - uid: Glitch9.AIDevKit.ToolCall
    name: ToolCall
    href: Glitch9.AIDevKit.ToolCall.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Glitch9.AIDevKit.ToolCall
    name: ToolCall
    href: Glitch9.AIDevKit.ToolCall.html
  - name: (
  - name: )
- uid: Glitch9.AIDevKit.OpenAI.Attachment.FileId*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.FileId
  href: Glitch9.AIDevKit.OpenAI.Attachment.html#Glitch9_AIDevKit_OpenAI_Attachment_FileId
  name: FileId
  nameWithType: Attachment.FileId
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.FileId
- uid: Glitch9.AIDevKit.OpenAI.Attachment.Tools*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.Tools
  href: Glitch9.AIDevKit.OpenAI.Attachment.html#Glitch9_AIDevKit_OpenAI_Attachment_Tools
  name: Tools
  nameWithType: Attachment.Tools
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.Tools
- uid: Glitch9.AIDevKit.OpenAI.Attachment.IsFileId*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.IsFileId
  href: Glitch9.AIDevKit.OpenAI.Attachment.html#Glitch9_AIDevKit_OpenAI_Attachment_IsFileId
  name: IsFileId
  nameWithType: Attachment.IsFileId
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.IsFileId
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Glitch9.AIDevKit.OpenAI.Attachment.IsTools*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.IsTools
  href: Glitch9.AIDevKit.OpenAI.Attachment.html#Glitch9_AIDevKit_OpenAI_Attachment_IsTools
  name: IsTools
  nameWithType: Attachment.IsTools
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.IsTools
- uid: Glitch9.AIDevKit.OpenAI.Attachment.#ctor*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.#ctor
  href: Glitch9.AIDevKit.OpenAI.Attachment.html#Glitch9_AIDevKit_OpenAI_Attachment__ctor_System_String_Glitch9_AIDevKit_ToolType_
  name: Attachment
  nameWithType: Attachment.Attachment
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.Attachment
  nameWithType.vb: Attachment.New
  fullName.vb: Glitch9.AIDevKit.OpenAI.Attachment.New
  name.vb: New
- uid: Glitch9.AIDevKit.ToolType
  commentId: T:Glitch9.AIDevKit.ToolType
  parent: Glitch9.AIDevKit
  href: Glitch9.AIDevKit.ToolType.html
  name: ToolType
  nameWithType: ToolType
  fullName: Glitch9.AIDevKit.ToolType
- uid: Glitch9.AIDevKit
  commentId: N:Glitch9.AIDevKit
  href: Glitch9.html
  name: Glitch9.AIDevKit
  nameWithType: Glitch9.AIDevKit
  fullName: Glitch9.AIDevKit
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Glitch9.AIDevKit.OpenAI.Attachment.Equals*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.Equals
  href: Glitch9.AIDevKit.OpenAI.Attachment.html#Glitch9_AIDevKit_OpenAI_Attachment_Equals_System_Object_
  name: Equals
  nameWithType: Attachment.Equals
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: Glitch9.AIDevKit.OpenAI.Attachment.GetHashCode*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.GetHashCode
  href: Glitch9.AIDevKit.OpenAI.Attachment.html#Glitch9_AIDevKit_OpenAI_Attachment_GetHashCode
  name: GetHashCode
  nameWithType: Attachment.GetHashCode
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: Glitch9.AIDevKit.OpenAI.Attachment.ToString*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Attachment.ToString
  href: Glitch9.AIDevKit.OpenAI.Attachment.html#Glitch9_AIDevKit_OpenAI_Attachment_ToString
  name: ToString
  nameWithType: Attachment.ToString
  fullName: Glitch9.AIDevKit.OpenAI.Attachment.ToString
