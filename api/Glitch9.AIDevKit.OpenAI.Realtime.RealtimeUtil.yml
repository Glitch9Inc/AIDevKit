### YamlMime:ManagedReference
items:
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  commentId: T:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  id: RealtimeUtil
  parent: Glitch9.AIDevKit.OpenAI.Realtime
  children:
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String,System.Int32,System.Int32)
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String)
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.GetChannelCount(AudioSpeakerMode)
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,AudioClip)
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.Single[])
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String)
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(System.Single[],Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.Int32,System.Int32)
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)
  - Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResolveUrl(Glitch9.AIDevKit.Model)
  langs:
  - csharp
  - vb
  name: RealtimeUtil
  nameWithType: RealtimeUtil
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  type: Class
  source:
    id: RealtimeUtil
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 5
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static class RealtimeUtil
    content.vb: Public Module RealtimeUtil
  inheritance:
  - System.Object
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResolveUrl(Glitch9.AIDevKit.Model)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResolveUrl(Glitch9.AIDevKit.Model)
  id: ResolveUrl(Glitch9.AIDevKit.Model)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: ResolveUrl(Model)
  nameWithType: RealtimeUtil.ResolveUrl(Model)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResolveUrl(Glitch9.AIDevKit.Model)
  type: Method
  source:
    id: ResolveUrl
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 8
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static string ResolveUrl(Model model)
    parameters:
    - id: model
      type: Glitch9.AIDevKit.Model
    return:
      type: System.String
    content.vb: Public Shared Function ResolveUrl(model As Model) As String
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResolveUrl*
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String)
  id: InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: InputAudioToBase64EncodedAudio(RealtimeAudioFormat, string)
  nameWithType: RealtimeUtil.InputAudioToBase64EncodedAudio(RealtimeAudioFormat, string)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, string)
  type: Method
  source:
    id: InputAudioToBase64EncodedAudio
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 11
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static UniTask<string> InputAudioToBase64EncodedAudio(RealtimeAudioFormat inputFormat, string audioFilePath)
    parameters:
    - id: inputFormat
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
    - id: audioFilePath
      type: System.String
    return:
      type: UniTask{System.String}
    content.vb: Public Shared Function InputAudioToBase64EncodedAudio(inputFormat As RealtimeAudioFormat, audioFilePath As String) As UniTask(Of String)
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio*
  nameWithType.vb: RealtimeUtil.InputAudioToBase64EncodedAudio(RealtimeAudioFormat, String)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, String)
  name.vb: InputAudioToBase64EncodedAudio(RealtimeAudioFormat, String)
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,AudioClip)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,AudioClip)
  id: InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,AudioClip)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: InputAudioToBase64EncodedAudio(RealtimeAudioFormat, AudioClip)
  nameWithType: RealtimeUtil.InputAudioToBase64EncodedAudio(RealtimeAudioFormat, AudioClip)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, AudioClip)
  type: Method
  source:
    id: InputAudioToBase64EncodedAudio
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 16
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static string InputAudioToBase64EncodedAudio(RealtimeAudioFormat inputFormat, AudioClip audioClip)
    parameters:
    - id: inputFormat
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
    - id: audioClip
      type: AudioClip
    return:
      type: System.String
    content.vb: Public Shared Function InputAudioToBase64EncodedAudio(inputFormat As RealtimeAudioFormat, audioClip As AudioClip) As String
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio*
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.Single[])
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.Single[])
  id: InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.Single[])
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: InputAudioToBase64EncodedAudio(RealtimeAudioFormat, float[])
  nameWithType: RealtimeUtil.InputAudioToBase64EncodedAudio(RealtimeAudioFormat, float[])
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, float[])
  type: Method
  source:
    id: InputAudioToBase64EncodedAudio
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 21
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static string InputAudioToBase64EncodedAudio(RealtimeAudioFormat inputFormat, float[] audioData)
    parameters:
    - id: inputFormat
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
    - id: audioData
      type: System.Single[]
    return:
      type: System.String
    content.vb: Public Shared Function InputAudioToBase64EncodedAudio(inputFormat As RealtimeAudioFormat, audioData As Single()) As String
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio*
  nameWithType.vb: RealtimeUtil.InputAudioToBase64EncodedAudio(RealtimeAudioFormat, Single())
  fullName.vb: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, Single())
  name.vb: InputAudioToBase64EncodedAudio(RealtimeAudioFormat, Single())
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String,System.Int32,System.Int32)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String,System.Int32,System.Int32)
  id: Base64EncodedAudioToAudioClip(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String,System.Int32,System.Int32)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: Base64EncodedAudioToAudioClip(RealtimeAudioFormat, string, int, int)
  nameWithType: RealtimeUtil.Base64EncodedAudioToAudioClip(RealtimeAudioFormat, string, int, int)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, string, int, int)
  type: Method
  source:
    id: Base64EncodedAudioToAudioClip
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 26
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static AudioClip Base64EncodedAudioToAudioClip(RealtimeAudioFormat outputFormat, string base64EncodedAudio, int unitySampleRate, int unityChannels)
    parameters:
    - id: outputFormat
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
    - id: base64EncodedAudio
      type: System.String
    - id: unitySampleRate
      type: System.Int32
    - id: unityChannels
      type: System.Int32
    return:
      type: AudioClip
    content.vb: Public Shared Function Base64EncodedAudioToAudioClip(outputFormat As RealtimeAudioFormat, base64EncodedAudio As String, unitySampleRate As Integer, unityChannels As Integer) As AudioClip
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip*
  nameWithType.vb: RealtimeUtil.Base64EncodedAudioToAudioClip(RealtimeAudioFormat, String, Integer, Integer)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, String, Integer, Integer)
  name.vb: Base64EncodedAudioToAudioClip(RealtimeAudioFormat, String, Integer, Integer)
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String)
  id: Base64EncodedAudioToAudioData(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.String)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: Base64EncodedAudioToAudioData(RealtimeAudioFormat, string)
  nameWithType: RealtimeUtil.Base64EncodedAudioToAudioData(RealtimeAudioFormat, string)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, string)
  type: Method
  source:
    id: Base64EncodedAudioToAudioData
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 31
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static float[] Base64EncodedAudioToAudioData(RealtimeAudioFormat outputFormat, string base64EncodedAudio)
    parameters:
    - id: outputFormat
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
    - id: base64EncodedAudio
      type: System.String
    return:
      type: System.Single[]
    content.vb: Public Shared Function Base64EncodedAudioToAudioData(outputFormat As RealtimeAudioFormat, base64EncodedAudio As String) As Single()
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData*
  nameWithType.vb: RealtimeUtil.Base64EncodedAudioToAudioData(RealtimeAudioFormat, String)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData(Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, String)
  name.vb: Base64EncodedAudioToAudioData(RealtimeAudioFormat, String)
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.GetChannelCount(AudioSpeakerMode)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.GetChannelCount(AudioSpeakerMode)
  id: GetChannelCount(AudioSpeakerMode)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: GetChannelCount(AudioSpeakerMode)
  nameWithType: RealtimeUtil.GetChannelCount(AudioSpeakerMode)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.GetChannelCount(AudioSpeakerMode)
  type: Method
  source:
    id: GetChannelCount
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 36
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  syntax:
    content: public static int GetChannelCount(AudioSpeakerMode audioSpeakerMode)
    parameters:
    - id: audioSpeakerMode
      type: AudioSpeakerMode
    return:
      type: System.Int32
    content.vb: Public Shared Function GetChannelCount(audioSpeakerMode As AudioSpeakerMode) As Integer
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.GetChannelCount*
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(System.Single[],Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.Int32,System.Int32)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(System.Single[],Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.Int32,System.Int32)
  id: ResampleAudio(System.Single[],Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat,System.Int32,System.Int32)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: ResampleAudio(float[], RealtimeAudioFormat, int, int)
  nameWithType: RealtimeUtil.ResampleAudio(float[], RealtimeAudioFormat, int, int)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(float[], Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, int, int)
  type: Method
  source:
    id: ResampleAudio
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 59
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  summary: Resample audio data from the Realtime API to match Unity's audio settings, considering the number of channels.
  example: []
  syntax:
    content: public static float[] ResampleAudio(float[] audioData, RealtimeAudioFormat outputFormat, int unitySampleRate, int unityChannels)
    parameters:
    - id: audioData
      type: System.Single[]
      description: Original audio data
    - id: outputFormat
      type: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
      description: Original audio format (contains sample rate)
    - id: unitySampleRate
      type: System.Int32
      description: Target Unity sample rate
    - id: unityChannels
      type: System.Int32
      description: Number of audio channels
    return:
      type: System.Single[]
      description: Resampled audio data
    content.vb: Public Shared Function ResampleAudio(audioData As Single(), outputFormat As RealtimeAudioFormat, unitySampleRate As Integer, unityChannels As Integer) As Single()
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio*
  nameWithType.vb: RealtimeUtil.ResampleAudio(Single(), RealtimeAudioFormat, Integer, Integer)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(Single(), Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat, Integer, Integer)
  name.vb: ResampleAudio(Single(), RealtimeAudioFormat, Integer, Integer)
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)
  id: ResampleAudio(System.Single[],System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil
  langs:
  - csharp
  - vb
  name: ResampleAudio(float[], int, int, int, int)
  nameWithType: RealtimeUtil.ResampleAudio(float[], int, int, int, int)
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(float[], int, int, int, int)
  type: Method
  source:
    id: ResampleAudio
    path: E:/UnityProjects/Glitch9/AI Development Kit Clean/AI Development Kit Clean/Assets/Glitch9/AIDevKit/Runtime/Scripts/Pro/Advanced/RealtimeAPI/RealtimeUtil.cs
    startLine: 75
  namespace: Glitch9.AIDevKit.OpenAI.Realtime
  summary: Resample audio data from the Realtime API to match Unity's audio settings, considering the number of channels.
  example: []
  syntax:
    content: public static float[] ResampleAudio(float[] audioData, int originalSampleRate, int unitySampleRate, int originalChannels, int unityChannels)
    parameters:
    - id: audioData
      type: System.Single[]
      description: Original audio data
    - id: originalSampleRate
      type: System.Int32
      description: Original sample rate
    - id: unitySampleRate
      type: System.Int32
      description: Target Unity sample rate
    - id: originalChannels
      type: System.Int32
      description: Original audio data channel count
    - id: unityChannels
      type: System.Int32
      description: Unity audio output channel count
    return:
      type: System.Single[]
      description: Resampled audio data
    content.vb: Public Shared Function ResampleAudio(audioData As Single(), originalSampleRate As Integer, unitySampleRate As Integer, originalChannels As Integer, unityChannels As Integer) As Single()
  overload: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio*
  nameWithType.vb: RealtimeUtil.ResampleAudio(Single(), Integer, Integer, Integer, Integer)
  fullName.vb: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio(Single(), Integer, Integer, Integer, Integer)
  name.vb: ResampleAudio(Single(), Integer, Integer, Integer, Integer)
references:
- uid: Glitch9.AIDevKit.OpenAI.Realtime
  commentId: N:Glitch9.AIDevKit.OpenAI.Realtime
  href: Glitch9.html
  name: Glitch9.AIDevKit.OpenAI.Realtime
  nameWithType: Glitch9.AIDevKit.OpenAI.Realtime
  fullName: Glitch9.AIDevKit.OpenAI.Realtime
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Realtime
    name: Realtime
    href: Glitch9.AIDevKit.OpenAI.Realtime.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI
    name: OpenAI
    href: Glitch9.AIDevKit.OpenAI.html
  - name: .
  - uid: Glitch9.AIDevKit.OpenAI.Realtime
    name: Realtime
    href: Glitch9.AIDevKit.OpenAI.Realtime.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResolveUrl*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResolveUrl
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.html#Glitch9_AIDevKit_OpenAI_Realtime_RealtimeUtil_ResolveUrl_Glitch9_AIDevKit_Model_
  name: ResolveUrl
  nameWithType: RealtimeUtil.ResolveUrl
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResolveUrl
- uid: Glitch9.AIDevKit.Model
  commentId: T:Glitch9.AIDevKit.Model
  parent: Glitch9.AIDevKit
  href: Glitch9.AIDevKit.Model.html
  name: Model
  nameWithType: Model
  fullName: Glitch9.AIDevKit.Model
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Glitch9.AIDevKit
  commentId: N:Glitch9.AIDevKit
  href: Glitch9.html
  name: Glitch9.AIDevKit
  nameWithType: Glitch9.AIDevKit
  fullName: Glitch9.AIDevKit
  spec.csharp:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
  spec.vb:
  - uid: Glitch9
    name: Glitch9
    href: Glitch9.html
  - name: .
  - uid: Glitch9.AIDevKit
    name: AIDevKit
    href: Glitch9.AIDevKit.html
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.html#Glitch9_AIDevKit_OpenAI_Realtime_RealtimeUtil_InputAudioToBase64EncodedAudio_Glitch9_AIDevKit_OpenAI_Realtime_RealtimeAudioFormat_System_String_
  name: InputAudioToBase64EncodedAudio
  nameWithType: RealtimeUtil.InputAudioToBase64EncodedAudio
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.InputAudioToBase64EncodedAudio
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
  commentId: T:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
  parent: Glitch9.AIDevKit.OpenAI.Realtime
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat.html
  name: RealtimeAudioFormat
  nameWithType: RealtimeAudioFormat
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeAudioFormat
- uid: UniTask{System.String}
  commentId: '!:UniTask{System.String}'
  definition: UniTask`1
  name: UniTask<string>
  nameWithType: UniTask<string>
  fullName: UniTask<string>
  nameWithType.vb: UniTask(Of String)
  fullName.vb: UniTask(Of String)
  name.vb: UniTask(Of String)
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: UniTask`1
  isExternal: true
  name: UniTask<>
  nameWithType: UniTask<>
  fullName: UniTask<>
  nameWithType.vb: UniTask(Of )
  fullName.vb: UniTask(Of )
  name.vb: UniTask(Of )
  spec.csharp:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: AudioClip
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: AudioClip
- uid: System.Single[]
  isExternal: true
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
  - name: (
  - name: )
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.html#Glitch9_AIDevKit_OpenAI_Realtime_RealtimeUtil_Base64EncodedAudioToAudioClip_Glitch9_AIDevKit_OpenAI_Realtime_RealtimeAudioFormat_System_String_System_Int32_System_Int32_
  name: Base64EncodedAudioToAudioClip
  nameWithType: RealtimeUtil.Base64EncodedAudioToAudioClip
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioClip
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.html#Glitch9_AIDevKit_OpenAI_Realtime_RealtimeUtil_Base64EncodedAudioToAudioData_Glitch9_AIDevKit_OpenAI_Realtime_RealtimeAudioFormat_System_String_
  name: Base64EncodedAudioToAudioData
  nameWithType: RealtimeUtil.Base64EncodedAudioToAudioData
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.Base64EncodedAudioToAudioData
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.GetChannelCount*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.GetChannelCount
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.html#Glitch9_AIDevKit_OpenAI_Realtime_RealtimeUtil_GetChannelCount_AudioSpeakerMode_
  name: GetChannelCount
  nameWithType: RealtimeUtil.GetChannelCount
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.GetChannelCount
- uid: AudioSpeakerMode
  commentId: '!:AudioSpeakerMode'
  isExternal: true
  name: AudioSpeakerMode
  nameWithType: AudioSpeakerMode
  fullName: AudioSpeakerMode
- uid: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio*
  commentId: Overload:Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio
  href: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.html#Glitch9_AIDevKit_OpenAI_Realtime_RealtimeUtil_ResampleAudio_System_Single___Glitch9_AIDevKit_OpenAI_Realtime_RealtimeAudioFormat_System_Int32_System_Int32_
  name: ResampleAudio
  nameWithType: RealtimeUtil.ResampleAudio
  fullName: Glitch9.AIDevKit.OpenAI.Realtime.RealtimeUtil.ResampleAudio
